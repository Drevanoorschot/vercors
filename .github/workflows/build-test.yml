name: Vercors build and test workflow
# Only run the workflow when pushed to master, dev, or on pull requests.
on: 
  push:
    branches:
      - '**'
    tags-ignore: 
      - dev-prerelease
  pull_request:
    branches:
      - '**'
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Default
    steps:
      # This should automatically cancel any previous workflows that are still
      # running when for example new commits are pushed.
      - uses: technote-space/auto-cancel-redundant-workflow@v1
      - uses: actions/checkout@v2
      - name: Cache SBT dependencies modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.cache/coursier
          key: ${{ runner.os }}-build-vercors-sbt-jdk11
      - uses: actions/setup-java@v1
        with:
          java-version: "11"
      # Currently sbt and fakeroot are installed by default
      - run: sbt debian:packageBin
      - name: Archive VerCors .deb
        uses: actions/upload-artifact@v2
        with:
          name: vercors-debian-package
          retention-days: 1
          path: |
            target/*.deb
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          # This is set automatically by github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # SONAR_TOKEN is set in the secrets section of the github repo
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
      # If this is the dev branch we also want to build the .txz binary for the release
      - name: Build mac binary
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: sbt universal:packageZipTarball
      # If this is the dev branch we update the pre-release tag in the github repo
      # We also package the release zip
      - name: Set pre-release tag in github repo
        if: ${{ github.ref == 'refs/heads/dev' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.name "Vercors Team"
          git config --local user.email "vercors@lists.utwente.nl"
          git tag --force dev-prerelease
          git remote set-url origin https://${GITHUB_TOKEN}@github.com/utwente-fmt/vercors.git
          git push --force --tags

          zip dev-prerelease target/*.deb target/universal/*.tgz
      # If this is the dev branch we create a pre-release in github releases
      - name: Create pre-release
        if: ${{ github.ref == 'refs/heads/dev' }}
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: dev-prerelease
          release_name: Vercors Dev Build
          prerelease: true
          body: This is an alpha build of the vercors development branch. It is updated automatically after each merge. Refer to the commit on the left for the last update.
      # Finally, we also upload the release zip if applicable
      - name: Upload Release Asset
        if: ${{ github.ref == 'refs/heads/dev' }}
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dev-prerelease.zip
          asset_name: dev-prerelease.zip
          asset_content_type: application/zip
      
  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        testID: [0, 1, 2, 3, 4]
    env:
      maxTestID: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "11"
          java-package: jre
      - name: Download VerCors binary
        uses: actions/download-artifact@v2
        with:
          name: vercors-debian-package
      - run: ls
      - run: "sudo dpkg -i *.deb"
      - run: vercors --silicon examples/manual/fibonacci.pvl
      - run: SPLIT=${{ matrix.testID }}/${{ env.maxTestID }} vercors --test=examples --test-workers=1 --tool=silicon --exclude-suite=slow,medium,problem-fail,skip-travis --progress

