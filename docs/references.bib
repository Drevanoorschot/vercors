@inproceedings{AmighiBHZ12,
	Author = {A. Amighi and Blom, S. and Huisman, M. and Zaharieva-Stojanovski, M.},
	Booktitle = {PLPV},
	Pages = {71--82},
	Publisher = {ACM},
	Title = {The {VerCors} Project: Setting Up Basecamp},
	Year = "2012",
  url_Link = {https://doi.org/10.1145/2103776.2103785}
}

@inproceedings{DBLP:conf/fase/BlomDH15,
  author    = {Stefan Blom and
               Saeed Darabi and
               Marieke Huisman},
  title     = {Verification of Loop Parallelisations},
  booktitle = {Fundamental Approaches to Software Engineering - 18th International
               Conference, {FASE} 2015, Held as Part of the European Joint Conferences
               on Theory and Practice of Software, {ETAPS} 2015, London, UK, April
               11-18, 2015. Proceedings},
  pages     = {202--217},
  year      = {2015},
  crossref  = {DBLP:conf/fase/2015},
  url       = {https://doi.org/10.1007/978-3-662-46675-9\_14},
  doi       = {10.1007/978-3-662-46675-9\_14},
  timestamp = {Tue, 14 May 2019 10:00:54 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/fase/BlomDH15},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@proceedings{DBLP:conf/fase/2015,
  editor    = {Alexander Egyed and
               Ina Schaefer},
  title     = {Fundamental Approaches to Software Engineering - 18th International
               Conference, {FASE} 2015, Held as Part of the European Joint Conferences
               on Theory and Practice of Software, {ETAPS} 2015, London, UK, April
               11-18, 2015. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {9033},
  publisher = {Springer},
  year      = {2015},
  url       = {https://doi.org/10.1007/978-3-662-46675-9},
  doi       = {10.1007/978-3-662-46675-9},
  isbn      = {978-3-662-46674-2},
  timestamp = {Tue, 14 May 2019 10:00:54 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/fase/2015},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{BlomH14,
	Author = {Blom, S. and Huisman, M.},
	Booktitle = FM,
	Pages = {127-131},
	Publisher = springer,
	Series = lncs,
	Title = {The {VerCors} Tool for Verification of Concurrent Programs},
	Volume = {8442},
	Year = {2014}}

@article{BlomHM14,
	Author = {S. Blom and M. Huisman and M. Mihel\v{c}i\'{c}},
	Issn = {0167-6423},
	Issue = {part 3},
	Journal = scp,
	Pages = {376--388},
	Publisher = elsevier,
	Title = {{Specification and Verification of {GPGPU} Programs}},
	Volume = 95,
	Year = {2014}}

@inproceedings{BlomHZ15,
	Author = {Blom, S. and Huisman, M. and Zaharieva-Stojanovski, M.},
	Booktitle = SEFM,
	Title = {History-based verification of functional behaviour of concurrent programs},
	Year = {2015}}

@inproceedings{FuturePlaces,
	Author = {W. Oortwijn and S. Blom and M. Huisman},
	Booktitle = {PLACES},
	Pages = {65--72},
	Title = {Future-based Static Analysis of Message Passing Programs},
	Year = {2016}}


@article{Haack76303,
	Author = {C. Haack and M. Huisman and C. Hurlin},
	Journal = {Nieuwsbrief van de Nederlandse Vereniging voor Theoretische Informatica},
	Pages = {13--23},
	Publisher = {Nederlandse Vereniging voor Theoretische Informatica},
	Title = {Permission-Based Separation Logic for Multithreaded Java Programs},
	Volume = {15},
	Year = {2011}}


@inproceedings{DBLP:conf/issta/JoostenOSH18,
  author    = {Sebastiaan J. C. Joosten and
               Wytse Oortwijn and
               Mohsen Safari and
               Marieke Huisman},
  title     = {An exercise in verifying sequential programs with VerCors},
  booktitle = {{ISSTA/ECOOP} Workshops},
  pages     = {40--45},
  publisher = {{ACM}},
  year      = {2018}
}

@inproceedings{DBLP:conf/ifm/BlomDHO17,
  author    = {Stefan Blom and
               Saeed Darabi and
               Marieke Huisman and
               Wytse Oortwijn},
  title     = {The VerCors Tool Set: Verification of Parallel and Concurrent Software},
  booktitle = {{IFM}},
  series    = {Lecture Notes in Computer Science},
  volume    = {10510},
  pages     = {102--110},
  publisher = {Springer},
  year      = {2017}
}

@inproceedings{DBLP:conf/pdp/AmighiBH16,
  author    = {Afshin Amighi and
               Stefan Blom and
               Marieke Huisman},
  title     = {VerCors: {A} Layered Approach to Practical Verification of Concurrent
               Software},
  booktitle = {{PDP}},
  pages     = {495--503},
  publisher = {{IEEE} Computer Society},
  year      = {2016}
}

@inproceedings{DBLP:conf/fm/BlomH14,
  author    = {Stefan Blom and
               Marieke Huisman},
  title     = {The VerCors Tool for Verification of Concurrent Programs},
  booktitle = {{FM}},
  series    = {Lecture Notes in Computer Science},
  volume    = {8442},
  pages     = {127--131},
  publisher = {Springer},
  year      = {2014}
}

@inproceedings{DBLP:conf/sfm/AmighiBDHMZ14,
  author    = {Afshin Amighi and
               Stefan Blom and
               Saeed Darabi and
               Marieke Huisman and
               Wojciech Mostowski and
               Marina Zaharieva{-}Stojanovski},
  title     = {Verification of Concurrent Systems with VerCors},
  booktitle = {{SFM}},
  series    = {Lecture Notes in Computer Science},
  volume    = {8483},
  pages     = {172--216},
  publisher = {Springer},
  year      = {2014}
}


@inproceedings{AmighiAPLAS,
	Author = {A. Amighi and S. Blom and M. Huisman},
	Booktitle = {APLAS},
	Pages = {255--274},
	Title = {Resource Protection Using Atomics - Patterns and Verification},
	Year = {2014}}
	
@inproceedings{DBLP:conf/birthday/HuismanJ18,
  author    = {Marieke Huisman and
               Sebastiaan J. C. Joosten},
  title     = {Towards Reliable Concurrent Software},
  booktitle = {Principled Software Development},
  pages     = {129--146},
  publisher = {Springer},
  year      = {2018}
}
@inproceedings{DBLP:conf/isola/JoostenH18,
  author    = {Sebastiaan J. C. Joosten and
               Marieke Huisman},
  title     = {Static Code Verification Through Process Models},
  booktitle = {ISoLA {(3)}},
  series    = {Lecture Notes in Computer Science},
  volume    = {11246},
  pages     = {343--354},
  publisher = {Springer},
  year      = {2018}
}
@inproceedings{DBLP:conf/isola/HuismanBDS18,
  author    = {Marieke Huisman and
               Stefan Blom and
               Saeed Darabi and
               Mohsen Safari},
  title     = {Program Correctness by Transformation},
  booktitle = {ISoLA {(1)}},
  series    = {Lecture Notes in Computer Science},
  volume    = {11244},
  pages     = {365--380},
  publisher = {Springer},
  year      = {2018}
}

@inproceedings{DBLP:conf/issta/JoostenOSH18,
  author    = {Sebastiaan J. C. Joosten and
               Wytse Oortwijn and
               Mohsen Safari and
               Marieke Huisman},
  title     = {An exercise in verifying sequential programs with VerCors},
  booktitle = {{ISSTA/ECOOP} Workshops},
  pages     = {40--45},
  publisher = {{ACM}},
  year      = {2018}
}

@inproceedings{DBLP:journals/corr/abs-1806-09851,
  author    = {Afshin Amighi and
               Marieke Huisman and
               Stefan Blom},
  title     = {Verification of Shared-Reading Synchronisers},
  booktitle = {MeTRiD@ETAPS},
  series    = {{EPTCS}},
  volume    = {272},
  pages     = {107--120},
  year      = {2018}
}

@article{DBLP:journals/sttt/HuismanKMT17,
  author    = {Marieke Huisman and
               Vladimir Klebanov and
               Rosemary Monahan and
               Michael Tautschnig},
  title     = {VerifyThis 2015 - {A} program verification competition},
  journal   = {{STTT}},
  volume    = {19},
  number    = {6},
  pages     = {763--771},
  year      = {2017}
}

@inproceedings{DBLP:conf/nfm/DarabiBH17,
  author    = {Saeed Darabi and
               Stefan C. C. Blom and
               Marieke Huisman},
  title     = {A Verification Technique for Deterministic Parallel Programs},
  booktitle = {{NFM}},
  series    = {Lecture Notes in Computer Science},
  volume    = {10227},
  pages     = {247--264},
  year      = {2017}
}

@inproceedings{DBLP:conf/vstte/OortwijnBGHZ17,
  author    = {Wytse Oortwijn and
               Stefan Blom and
               Dilian Gurov and
               Marieke Huisman and
               Marina Zaharieva{-}Stojanovski},
  title     = {An Abstraction Technique for Describing Concurrent Program Behaviour},
  booktitle = {{VSTTE}},
  series    = {Lecture Notes in Computer Science},
  volume    = {10712},
  pages     = {191--209},
  publisher = {Springer},
  year      = {2017}
}

@inproceedings{DBLP:journals/corr/OortwijnBH16,
  author    = {Wytse Oortwijn and
               Stefan Blom and
               Marieke Huisman},
  title     = {Future-based Static Analysis of Message Passing Programs},
  booktitle = {{PLACES}},
  series    = {{EPTCS}},
  volume    = {211},
  pages     = {65--72},
  year      = {2016}
}

@article{DBLP:journals/corr/AmighiHHH14,
  author    = {Afshin Amighi and
               Christian Haack and
               Marieke Huisman and
               Cl{\'{e}}ment Hurlin},
  title     = {Permission-Based Separation Logic for Multithreaded Java Programs},
  journal   = {Logical Methods in Computer Science},
  volume    = {11},
  number    = {1},
  year      = {2015}
}
@inproceedings{DBLP:conf/fase/Zaharieva-StojanovskiH14,
  author    = {Marina Zaharieva{-}Stojanovski and
               Marieke Huisman},
  title     = {Verifying Class Invariants in Concurrent Programs},
  booktitle = {{FASE}},
  series    = {Lecture Notes in Computer Science},
  volume    = {8411},
  pages     = {230--245},
  publisher = {Springer},
  year      = {2014}
}
@book{c4fd4c231b0743a58ef1b41e7a574deb,
title = "VerifyThis2018: A Program Verification Competition",
abstract = "VerifyThis 2018 was a two-day program verification competition which took place on April 14 and 15,2018 in Thessaloniki, Greece as part of the European Joint Conferences on Theory and Practice of Software(ETAPS 2018). It was the sixth instalment in the VerifyThis competition series. This article provides an overview of the VerifyThis 2018 event, the challenges that were posed during the competition, and a high-level overview of the solutions to these challenges. It concludes with the results of the competition.",
author = "Marieke Huisman and Rosemary Monahan and Peter M{\"u}ller and Andrei Paskevich and Gidon Ernst",
year = "2019",
month = "1",
language = "English",
}

@inproceedings{DBLP:journals/corr/abs-1806-09851,
  author    = {Afshin Amighi and
               Marieke Huisman and
               Stefan Blom},
  title     = {Verification of Shared-Reading Synchronisers},
  booktitle = {MeTRiD@ETAPS},
  series    = {{EPTCS}},
  volume    = {272},
  pages     = {107--120},
  year      = {2018}
}

@article{DBLP:journals/sttt/BlomH15,
  author    = {Stefan Blom and
               Marieke Huisman},
  title     = {Witnessing the elimination of magic wands},
  journal   = {{STTT}},
  volume    = {17},
  number    = {6},
  pages     = {757--781},
  year      = {2015}
}

	
@phdthesis{Zaharieva15,
	Author = {M. Zaharieva-Stojanovski},
	Doi = {10.3990/1.9789036539241},
	Number = {15-375},
	School = {University of Twente},
	Series = {CTIT Ph.D. Thesis Series},
	Title = {{Closer to Reliable Software: Verifying Functional Behaviour of Concurrent Programs}},
	Year = {2015},
	Bdsk-Url-1 = {https://doi.org/10.3990/1.9789036539241}}

	
	@phdthesis{e36589ceaad34ad595fd9fbd0626542b,
title = "Verification of program parallelization",
abstract = "This thesis presents a set of verification techniques based on permission-based separation logic to reason about the data race freedom and functional correctness of program parallelizations. Our reasoning techniques address different forms of high-level and low-level parallelization. For high-level parallel programs, we first define the Parallel Programming Language (PPL), a simple core language that captures the main features of deterministic parallel programming; then we discuss how PPL programs and consequently, real-world deterministic parallel programs (e.g. OpenMP programs) are verified. For low-level parallel programs, we specifically focus on reasoning about GPGPU kernels. At the end we discuss how the presented verification techniques are chained together to reason about the semantic equivalence of high-level parallel programs where they are automatically transformed to low-level parallel programs by a parallelizing compiler. Thus, effectively enabling a holistic verification solution for such parallelization frameworks.",
author = "Saeed Darabi",
note = "IPA Dissertation Series No. 2018-02 IDS PhD. Thesis Series No. 18-458",
year = "2018",
month = "3",
day = "2",
doi = "10.3990/1.9789036544849",
language = "English",
isbn = "978-90-365-4484-9",
school = "University of Twente",
}

@phdthesis{7077aace92e5428aaa370770a09e2b7a,
title = "Specification and verification of synchronisation classes in Java: A practical approach",
abstract = "Digital services are becoming an essential part of our daily lives. To provide these services, efficient software plays an important role. Concurrent programming is a technique that developers can exploit to gain more performance. In a concurrent program several threads of execution simultaneously are being executed. Sometimes they have to compete to access shared resources, like memory. This race of accessing shared memories can cause unexpected errors. Programmers use synchronisation constructs to tame the concurrency and control the accesses. In order to develop reliable concurrent software, the correctness of these synchronisation constructs is crucial.In this thesis we use a program logic, called permission-based Separation Logic, to statically reason about the correctness of synchronisation constructs. The logic has the power to reason about correct ownership of threads regarding shared memory. A correctly functioning synchroniser is responsible for exchanging a correct permission when a thread requests access to the shared memory. We use our VERCORS verification tool-set to verify the correctness of various synchronisation constructs.In Chapter 1 we discuss the scope of the thesis. All the required technical background about permission-based Separation Logic and synchronisation classes is explained in Chapter 2. In Chapter 3 we discuss how threads' start and join as minimum synchronisation points can be verified. To verify correctness of the synchronisation classes we have to first specify expected behaviour of the classes. This is covered in Chapter 4. In this chapter we present a unified approach to abstractly describe the common behaviour of synchronisers. Using our specifications, one is able to reason about the correctness of the client programs that access the shared state through the synchronisers.The atomic classes of java.util.concurrent are the core element of every synchronisation construct implementation. In Chapter 5 and Chapter 6 we propose a specification for atomic classes. Using this contract, we verified the implementation of synchronisation constructs w.r.t to their specifications from Chapter 4. In our proposed contract the specification of the atomic classes is parameterized with the protocols and resource invariants. Based on the context, the parameters can be defined. In Chapter 7 we propose a verification stack where each layer of stack verifies one particular aspect of a specified concurrent program in which atomic operations are the main synchronisation constructs. We demonstrate how to verify that a non-blocking data structure is data-race free and well connected. Based on the result of the verification from the lower layers, upper layers can reason about the functional properties of the concurrent data structure.In Chapter 8 we present a sound specification and verification technique to reason about data race freedom and functional correctness of GPU kernels that use atomic operations as synchronisation mechanism.Finally, Chapter 9 concludes the thesis with future directions.",
author = "A. Amighi",
note = "CTIT Ph.D. thesis series No. 17-451 IPA dissertation series No. 2018-01",
year = "2018",
month = "1",
day = "17",
doi = "10.3990/1.9789036544399",
language = "English",
isbn = "978-90-365-4439-9",
publisher = "University of Twente",
address = "Netherlands",
school = "University of Twente",
}


% Raul:

@inproceedings{DBLP:conf/aplas/HaackHH08,
  author    = {Christian Haack and
               Marieke Huisman and
               Cl{\'{e}}ment Hurlin},
  title     = {Reasoning about Java's Reentrant Locks},
  booktitle = {Programming Languages and Systems, 6th Asian Symposium, {APLAS} 2008,
               Bangalore, India, December 9-11, 2008. Proceedings},
  pages     = {171--187},
  year      = {2008},
  crossref  = {DBLP:conf/aplas/2008},
  url       = {https://doi.org/10.1007/978-3-540-89330-1\_13},
  doi       = {10.1007/978-3-540-89330-1\_13},
  timestamp = {Tue, 14 May 2019 10:00:41 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/aplas/HaackHH08},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@proceedings{DBLP:conf/aplas/2008,
  editor    = {G. Ramalingam},
  title     = {Programming Languages and Systems, 6th Asian Symposium, {APLAS} 2008,
               Bangalore, India, December 9-11, 2008. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {5356},
  publisher = {Springer},
  year      = {2008},
  url       = {https://doi.org/10.1007/978-3-540-89330-1},
  doi       = {10.1007/978-3-540-89330-1},
  isbn      = {978-3-540-89329-5},
  timestamp = {Tue, 14 May 2019 10:00:41 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/aplas/2008},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@phdthesis{DBLP:phd/hal/Hurlin09,
  author    = {Cl{\'{e}}ment Hurlin},
  title     = {Specification and Verification of Multithreaded Object-Oriented Programs
               with Separation Logic. (Sp{\'{e}}cification et v{\'{e}}rification
               de programmes orient{\'{e}}s objets en logique de s{\'{e}}paration)},
  school    = {University of Nice Sophia Antipolis, France},
  year      = {2009},
  url       = {https://tel.archives-ouvertes.fr/tel-00424979},
  timestamp = {Fri, 15 Jul 2016 22:10:33 +0200},
  biburl    = {https://dblp.org/rec/bib/phd/hal/Hurlin09},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/jot/HaackH09,
  author    = {Christian Haack and
               Cl{\'{e}}ment Hurlin},
  title     = {Resource Usage Protocols for Iterators},
  journal   = {Journal of Object Technology},
  volume    = {8},
  number    = {4},
  pages     = {55--83},
  year      = {2009},
  url       = {https://doi.org/10.5381/jot.2009.8.4.a3},
  doi       = {10.5381/jot.2009.8.4.a3},
  timestamp = {Fri, 26 May 2017 22:54:46 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/jot/HaackH09},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/amast/HaackH08,
  author    = {Christian Haack and
               Cl{\'{e}}ment Hurlin},
  title     = {Separation Logic Contracts for a Java-Like Language with Fork/Join},
  booktitle = {Algebraic Methodology and Software Technology, 12th International
               Conference, {AMAST} 2008, Urbana, IL, USA, July 28-31, 2008, Proceedings},
  pages     = {199--215},
  year      = {2008},
  crossref  = {DBLP:conf/amast/2008},
  url       = {https://doi.org/10.1007/978-3-540-79980-1\_16},
  doi       = {10.1007/978-3-540-79980-1\_16},
  timestamp = {Tue, 14 May 2019 10:00:38 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/amast/HaackH08},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@proceedings{DBLP:conf/amast/2008,
  editor    = {Jos{\'{e}} Meseguer and
               Grigore Rosu},
  title     = {Algebraic Methodology and Software Technology, 12th International
               Conference, {AMAST} 2008, Urbana, IL, USA, July 28-31, 2008, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {5140},
  publisher = {Springer},
  year      = {2008},
  url       = {https://doi.org/10.1007/978-3-540-79980-1},
  doi       = {10.1007/978-3-540-79980-1},
  isbn      = {978-3-540-79979-5},
  timestamp = {Tue, 14 May 2019 10:00:38 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/amast/2008},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

% TODO
% TODO: master theses of Jelte Zeilstra, and Henk Mulder.
% TODO
