field val: Int
field next: Ref

predicate LLInf(x: Ref, i: Int) {
     acc(x.val) && x.val == i
  && acc(x.next)
  && acc(LLInf(x.next, i + 1))
}

method test04(x: Ref) {
  package // ERR: Magic wand might not be well-formed. Receiver of x.next might be null.
        acc(LLInf(x, 0))
    --*
        unfolding acc(LLInf(x, 0)) in
        unfolding acc(LLInf(x.next, 1)) in
        acc(x.next.val) && x.next.val == 1
}
