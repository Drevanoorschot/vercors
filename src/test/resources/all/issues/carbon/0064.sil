function Nodesize$(this$_2: Ref): Int
  requires this$_2 != null
  requires acc(Nodevalid$(this$_2), wildcard)
  ensures result > 0
{
  1
}

predicate Nodevalid$(this$_3: Ref) {
  true
}

method Nodeinit$(this$_1: Ref, v: Int) returns (k$: Perm)
  requires this$_1 != null
  //:: UnexpectedOutput(application.precondition:insufficient.permission, /Carbon/issue/64/)
  ensures [(acc(Nodevalid$(this$_1), write) && (Nodesize$(this$_1) == 1)), true]
  //ensures (acc(Nodevalid$(this$_1), write) && (Nodesize$(this$_1) == 1))
{
  fold acc(Nodevalid$(this$_1), write)
}
