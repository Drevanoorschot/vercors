
field f: Int
field next: Ref

predicate valid(r: Ref) {
    acc(r.f, write) && acc(r.next, write) && ((r.next != null) ==> (acc(valid(r.next), write)))
}

method t1(r: Ref)
    requires acc(valid(r), write)
{
    var i: Int := unfolding acc(valid(r), write) in (r.f)
}

method t2(r: Ref)
    requires r != null
{
    //:: ExpectedOutput(assignment.failed:insufficient.permission)
    var i: Int := unfolding acc(valid(r), write) in (r.f)
}

method t3(r: Ref)
    requires acc(valid(r), write)
{
    //:: ExpectedOutput(assignment.failed:insufficient.permission)
    var i: Int := (unfolding acc(valid(r), write) in (unfolding acc(valid(r), write) in (r.f)))
}
