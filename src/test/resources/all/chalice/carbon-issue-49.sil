// oldC2SCases/predicates_2.chalice
domain GlobalKPermission {

  unique function globalK$(): Perm

  axiom globalKReadOnly {
    (globalK$() > none) && (write > globalK$())
  }
}

field old$methodPermission: Perm

field joinable$: Bool

field Cellx$: Int

field par$Cellb3$this$_4: Ref

field par$Cellb3$k$: Perm

predicate Cell$MonitorInvariant(this$: Ref) {
  true
}

predicate Cellwrite1$(this$_1: Ref) {
  acc(this$_1.Cellx$, write)
}

predicate Cellread1$(this$_2: Ref) {
  acc(this$_2.Cellx$, globalK$())
}

predicate Cellread2$(this$_3: Ref) {
  acc(this$_3.Cellx$, wildcard)
}

method Cellb3$(this$_4: Ref, k$: Perm)
  requires this$_4 != null
  requires k$ > none
  requires write > k$
  requires acc(Cellread1$(this$_4), write)
{
  var n$: Ref
  var a$: Ref
  var b$: Ref
  var c$: Ref
  unfold acc(Cellread1$(this$_4), write)
  fold acc(Cellread2$(this$_4), write)
  fold acc(Cellread2$(this$_4), write)
  //:: ExpectedOutput(fold.failed:insufficient.permission)
  //:: MissingOutput(fold.failed:insufficient.permission, /Carbon/issue/49/)
  fold acc(Cellwrite1$(this$_4), write)
}
