// chaliceSuite/general-tests/termination.chalice
domain GlobalKPermission {

  unique function globalK$(): Perm

  axiom globalKReadOnly {
    (globalK$() > none) && (write > globalK$())
  }
}

field old$methodPermission: Perm

field joinable$: Bool

field Nodeval$: Int

field Nodenext$: Ref

function Nodelength$(this$_2: Ref): Int
  requires this$_2 != null
  requires acc(Nodevalid$(this$_2), wildcard)
  ensures 0 <= result
{
  (unfolding acc(Nodevalid$(this$_2), wildcard) in (this$_2.Nodenext$ == null ? 1 : 1 + Nodelength$(this$_2.Nodenext$)))
}

function Nodet$(this$_3: Ref): Int
  requires this$_3 != null
  requires acc(Nodevalid$(this$_3), wildcard)
{
  (unfolding acc(Nodevalid$(this$_3), wildcard) in Nodet$(this$_3))
}

function Nodet2$(this$_5: Ref): Int
  requires this$_5 != null
  requires acc(Nodep$(this$_5), wildcard)
{
  //:: UnexpectedOutput(application.precondition:insufficient.permission, /Silicon/issue/154/)
  (unfolding acc(Nodep$(this$_5), wildcard) in Nodet$(this$_5))
}

predicate Node$MonitorInvariant(this$: Ref) {
  true
}

predicate Nodevalid$(this$_1: Ref) {
  acc(this$_1.Nodeval$, write) && acc(this$_1.Nodenext$, write) && ((this$_1.Nodenext$ != null) ==> acc(Nodevalid$(this$_1.Nodenext$), write))
}

predicate Nodep$(this$_4: Ref) {
  acc(Nodep$(this$_4), write)
}
