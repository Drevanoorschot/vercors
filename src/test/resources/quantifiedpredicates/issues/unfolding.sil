field f: Int

predicate p2(r:Ref)
{
    acc(r.f) && r.f == 5
}

method m2(x: Ref, xs:Set[Ref])
requires x in xs
requires forall r:Ref :: r in xs ==> acc(p2(r))
{
    //:: UnexpectedOutput(assert.failed:assertion.failed, /carbon/)
    assert forall r:Ref :: r in xs ==> unfolding p2(r) in r.f == 5
}

method m3(x1: Ref, x2:Ref)
requires acc(p2(x1))
requires acc(p2(x2))
//requires forall r:Ref :: r in xs ==> acc(p2(r))
{
    //:: UnexpectedOutput(assert.failed:assertion.failed, /carbon/)
    assert forall r:Ref :: r in Set(x1, x2) ==> unfolding p2(r) in r.f == 5
}
