// breaking permissions
field f: Int

// this test case checks the power of the axioms for count
// (including the axioms for the empty and the single element sequence)
method m(s: Seq[Ref])
  requires |s|>4 && forall i:Int :: i in [0..4) ==> acc(s[i].f, 25 / 100)
  requires s[0] == s[1] && s[1] == s[2] && s[2] == s[3]
{
//:: UnexpectedOutput(assignment.failed:insufficient.permission, /silicon/issue/73/)
  s[0].f := 4
}

// this one is very hard
method n(s: Seq[Ref])
  requires |s| > 4
  requires s[0] == s[1] && s[1] == s[2] && s[2] == s[3]
  requires acc(s[0].f, write)
  ensures forall i1:Int :: i1 in [0..4) ==> acc(s[i1].f, 25 / 100)
{
}

// variation
method n1(s: Seq[Ref])
  requires |s| > 4
  requires s[0] == s[1] && s[1] == s[2] && s[2] == s[3]
  requires forall i2:Int :: i2 in [0..2) ==> acc(s[i2].f, 50 / 100)
  ensures forall i3:Int :: i3 in [0..4) ==> acc(s[i3].f, 25 / 100)
{
}
