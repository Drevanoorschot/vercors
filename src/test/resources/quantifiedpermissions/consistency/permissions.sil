field f: Int

method test01(x: Ref)
  requires acc(x.f)
{
  assert x != null
}

method test01_qp(xs: Seq[Ref], y: Ref)
  requires y in xs
  requires forall x: Ref :: x in xs ==> acc(x.f)
{
  assert y != null
}

method test02(x: Ref, p: Perm)
  requires acc(x.f, p)
{
  assert x != null
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert p != none
}

method test02_qp(xs: Seq[Ref], y: Ref, p: Perm)
  requires y in xs
  requires forall x: Ref :: x in xs ==> acc(x.f, p)
{
  assert y != null
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert p != none
}
