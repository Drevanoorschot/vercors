field f: Ref

method test01(xs: Set[Ref], x: Ref, y: Ref)
  requires x in xs
  requires forall z: Ref :: z in xs ==> acc(z.f)
{
  assert x != null

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert y != null
}

method test02(xs: Set[Ref], x: Ref, k: Perm)
  requires x in xs
  requires forall z: Ref :: z in xs ==> acc(z.f, k)
{ assert x != null }

method test03(xs: Set[Ref], x: Ref)
  requires forall z: Ref :: z in xs ==> acc(z.f)
  requires xs == Set(x)
{
  //:: UnexpectedOutput(assert.failed:assertion.false, /silicon/issue/61/)
  assert x == null
}
