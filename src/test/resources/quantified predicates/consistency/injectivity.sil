field f: Int

predicate pred1(a:Ref) {
	acc(a.f)
}

predicate pred2(a:Ref, i:Int) {
	acc(a.f)
}

method test01_qp(xs: Seq[Ref], y: Ref)
{
//not injective
exhale forall x: Ref :: x in xs  ==> acc(pred1(y))
//not injective
exhale forall x: Ref :: x in xs  ==> acc(pred2(y, 1))
//:: ExpectedOutput(call.precondition:insufficient.permission)
exhale forall x: Ref :: x in xs ==> acc(pred2(x, 1))
}