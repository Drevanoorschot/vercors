[binder] (\forall* int i1__1,int j1__2;0 <= i1__1 && i1__1 < M && (0 <= j1__2 && j1__2 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1__1).VCTArray_Ref___item,j1__2).Integer__item , write ))
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item , write ))
[binder] (\forall* int i1__6,int j1__7;0 <= i1__6 && i1__6 < M && (0 <= j1__7 && j1__7 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1__6).VCTArray_Ref___item,j1__7).Integer__item , write ))
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item , write ))
[binder] (\forall* int i1__11,int j1__12;0 <= i1__11 && i1__11 < M && (0 <= j1__12 && j1__12 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1__11).VCTArray_Ref___item,j1__12).Integer__item , write ))
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item , write ))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall int k__11;0 <= k__11 && k__11 < i__5;result__6 [ k__11 ] == k__11 * k__11 * k__11)
[binder] (\forall int k__12;0 <= k__12 && k__12 < | sys__result |;sys__result [ k__12 ] == k__12 * k__12 * k__12)
[binder] (\forall int k;0 <= k && k < | sys__result |;sys__result [ k ] == k * k * k)
[binder] (\forall int k__23;0 <= k__23 && k__23 < | sys__result | - 2;sys__result [ k__23 ] == sys__result [ (k__23 + 1) ] + sys__result [ (k__23 + 2) ])
[binder] (\forall int k__24;0 <= k__24 && k__24 < | sys__result | - 2;sys__result [ k__24 ] == sys__result [ (k__24 + 1) ] + sys__result [ (k__24 + 2) ])
[binder] (\forall int k__25;0 <= k__25 && k__25 < i__17 - 2;fibonacci__15 [ k__25 ] == fibonacci__15 [ (k__25 + 1) ] + fibonacci__15 [ (k__25 + 2) ])
[binder] (\forall int k__26;0 <= k__26 && k__26 < | sys__result | - 2;sys__result [ k__26 ] == sys__result [ (k__26 + 1) ] + sys__result [ (k__26 + 2) ])
[binder] (\forall int k;0 <= k && k < | sys__result | - 2;sys__result [ k ] == sys__result [ (k + 1) ] + sys__result [ (k + 2) ])
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),i).Integer__item == \result [ i ])
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),i).Integer__item == \old( VCTArray.loc(getVCTOption1(ar),i).Integer__item ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),i).Integer__item == sys__result [ i ])
[binder] (\forall int i__8;0 <= i__8 && i__8 < 2;xs__4 [ i__8 ] == VCTArray.loc(getVCTOption1(array__1),i__8).Integer__item)
[binder] (\forall int i__16;0 <= i__16 && i__16 < 2;xs__12 [ i__16 ] == VCTArray.loc(getVCTOption1(array__9),i__16).Integer__item)
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__3;0 <= i__3 && i__3 < VCTArray.alen(getVCTOption1(diz.field_Test_sequence));Perm( VCTArray.loc(getVCTOption1(diz.field_Test_sequence),i__3).Ref__item , write ))
[binder] (\forall* int i__4;0 <= i__4 && i__4 < VCTArray.alen(getVCTOption1(diz.field_Test_sequence));Perm( VCTArray.loc(getVCTOption1(diz.field_Test_sequence),i__4).Ref__item.field_Element_value , write ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(diz.field_Test_sequence));Perm( VCTArray.loc(getVCTOption1(diz.field_Test_sequence),i).Ref__item , write ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(diz.field_Test_sequence));Perm( VCTArray.loc(getVCTOption1(diz.field_Test_sequence),i).Ref__item.field_Element_value , write ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int k__1;0 <= k__1 && k__1 < VCTArray.alen(getVCTOption1(t));Perm( VCTArray.loc(getVCTOption1(t),k__1).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int k__2;0 <= k__2 && k__2 < VCTArray.alen(getVCTOption1(t));VCTArray.loc(getVCTOption1(t),k__2).Integer__item == xs [ k__2 ])
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(t));Perm( VCTArray.loc(getVCTOption1(t),k).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(t));VCTArray.loc(getVCTOption1(t),k).Integer__item == xs [ k ])
[binder] (\forall* int k__12;0 <= k__12 && k__12 < VCTArray.alen(getVCTOption1(t));Perm( VCTArray.loc(getVCTOption1(t),k__12).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int k__13;0 <= k__13 && k__13 < VCTArray.alen(getVCTOption1(t));VCTArray.loc(getVCTOption1(t),k__13).Integer__item == xs [ k__13 ])
[binder] (\forall* int k__14;0 <= k__14 && k__14 < VCTArray.alen(getVCTOption1(res__3));Perm( VCTArray.loc(getVCTOption1(res__3),k__14).Integer__item , write ))
[binder] (\forall int k__15;0 <= k__15 && k__15 < i__4;VCTArray.loc(getVCTOption1(res__3),k__15).Integer__item == ys [ k__15 ])
[binder] (\forall* int k__16;0 <= k__16 && k__16 < VCTArray.alen(getVCTOption1(t));Perm( VCTArray.loc(getVCTOption1(t),k__16).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int k__17;0 <= k__17 && k__17 < VCTArray.alen(getVCTOption1(t));VCTArray.loc(getVCTOption1(t),k__17).Integer__item == xs [ k__17 ])
[binder] (\forall* int k__18;0 <= k__18 && k__18 < VCTArray.alen(getVCTOption1(sys__result));Perm( VCTArray.loc(getVCTOption1(sys__result),k__18).Integer__item , write ))
[binder] (\forall int k__19;0 <= k__19 && k__19 < VCTArray.alen(getVCTOption1(sys__result));VCTArray.loc(getVCTOption1(sys__result),k__19).Integer__item == ys [ k__19 ])
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(t));Perm( VCTArray.loc(getVCTOption1(t),k).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(t));VCTArray.loc(getVCTOption1(t),k).Integer__item == xs [ k ])
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(sys__result));Perm( VCTArray.loc(getVCTOption1(sys__result),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(sys__result));VCTArray.loc(getVCTOption1(sys__result),k).Integer__item == ys [ k ])
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < N;Perm( VCTArray.loc(getVCTOption1(ar),i__1).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;0 <= i && i < N)
[binder] (\forall* int k;0 <= k && k < N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;0 <= i && i < N)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int k;0 <= k && k < N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int k__4;0 <= k__4 && k__4 < N;Perm( VCTArray.loc(getVCTOption1(ar),k__4).Integer__item , write ))
[binder] (\forall* int k__5;0 <= k__5 && k__5 < N;Perm( VCTArray.loc(getVCTOption1(ar),k__5).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_BasicArray() ? TYPE<>.instanceof(TYPE<>.class_BasicArray(),t) : ! TYPE<>.instanceof(TYPE<>.class_BasicArray(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Ref() ? TYPE<>.instanceof(TYPE<>.class_Ref(),t) : ! TYPE<>.instanceof(TYPE<>.class_Ref(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Ref() ? TYPE<>.instanceof(TYPE<>.class_Ref(),t) : ! TYPE<>.instanceof(TYPE<>.class_Ref(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.alen(VCTArray.loc(getVCTOption1(sys__result),i0)) == size1)
[binder] (\forall int i0,int i1;0 <= i0 && i0 < size0 && (0 <= i1 && i1 < size1);VCTArray.alen(VCTArray.loc(VCTArray.loc(getVCTOption1(sys__result),i0),i1)) == size2)
[binder] (\forall* int i0,int i1,int i2;0 <= i0 && i0 < size0 && (0 <= i1 && i1 < size1) && (0 <= i2 && i2 < size2);Perm( VCTArray.loc(VCTArray.loc(VCTArray.loc(getVCTOption1(sys__result),i0),i1),i2).Integer__item , write ))
[binder] (\forall int i0,int i1,int i2;0 <= i0 && i0 < size0 && (0 <= i1 && i1 < size1) && (0 <= i2 && i2 < size2);VCTArray.loc(VCTArray.loc(VCTArray.loc(getVCTOption1(sys__result),i0),i1),i2).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall int i;0 <= i && i < | xs | - 1;xs [ i ] <= xs [ (i + 1) ])
[binder] (\forall int g,int h;0 <= g && g <= i && (i < h && h < | xs |);xs [ g ] <= xs [ h ])
[binder] (\forall int g;0 <= g && g < n;\result [ g ] == xs [ g ])
[binder] (\forall int g;n < g && g < | xs |;\result [ g ] == xs [ g ])
[binder] (\forall int k__4;0 <= k__4 && k__4 < i__3;out__1 [ k__4 ] <= out__1 [ i__3 ])
[binder] (\forall int k__7;0 <= k__7 && k__7 < | xs | && k__7 != i && k__7 != j;sys__result [ k__7 ] == xs [ k__7 ])
[binder] (\forall int k;0 <= k && k < | xs | && k != i && k != j;sys__result [ k ] == xs [ k ])
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall* int __i__36;0 <= __i__36 && __i__36 < 1;Perm( VCTArray.loc(getVCTOption1(__arg_a),__i__36).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < 1;Perm( VCTArray.loc(getVCTOption1(__arg_a),__i).Integer__item , write ))
[binder] (\forall* int __i__83;0 <= __i__83 && __i__83 < __arg_leftLen;Perm( VCTArray.loc(getVCTOption1(__arg_left),__i__83).Integer__item , write ))
[binder] (\forall* int __i__84;0 <= __i__84 && __i__84 < __arg_rightLen;Perm( VCTArray.loc(getVCTOption1(__arg_right),__i__84).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < __arg_leftLen;Perm( VCTArray.loc(getVCTOption1(__arg_left),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < __arg_rightLen;Perm( VCTArray.loc(getVCTOption1(__arg_right),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < __arg_leftLen;Perm( VCTArray.loc(getVCTOption1(__arg_left),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < __arg_rightLen;Perm( VCTArray.loc(getVCTOption1(__arg_right),__i).Integer__item , write ))
[binder] (\forall* int __i__97;0 <= __i__97 && __i__97 < __arg_len;Perm( VCTArray.loc(getVCTOption1(__arg_data),__i__97).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < __arg_len;Perm( VCTArray.loc(getVCTOption1(__arg_data),__i).Integer__item , write ))
[binder] (\forall* int __i__145;0 <= __i__145 && __i__145 < __arg_len;Perm( VCTArray.loc(getVCTOption1(__arg_data),__i__145).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < __arg_len;Perm( VCTArray.loc(getVCTOption1(__arg_data),__i).Integer__item , write ))
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(sys__result,i0).VCTOption_VCTArray_Ref____item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(sys__result,i0).VCTOption_VCTArray_Ref____item == VCTOption.VCTNone())
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(sys__result,i0).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(sys__result,i0).Integer__item == 0)
[binder] (\forall int i;0 <= i && i < to - from;VCTArray.loc(getVCTOption1(array),i + from) == VCTArray.loc(getVCTOption1(\result),i))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Node() ? TYPE<>.instanceof(TYPE<>.class_Node(),t) : ! TYPE<>.instanceof(TYPE<>.class_Node(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Leaf() ? TYPE<>.instanceof(TYPE<>.class_Leaf(),t) : ! TYPE<>.instanceof(TYPE<>.class_Leaf(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Test() ? TYPE<>.instanceof(TYPE<>.class_Test(),t) : ! TYPE<>.instanceof(TYPE<>.class_Test(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_A() ? TYPE<>.instanceof(TYPE<>.class_A(),t) : ! TYPE<>.instanceof(TYPE<>.class_A(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_B() ? TYPE<>.instanceof(TYPE<>.class_B(),t) : ! TYPE<>.instanceof(TYPE<>.class_B(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_DifferentClassesDifferentTypes1() ? TYPE<>.instanceof(TYPE<>.class_DifferentClassesDifferentTypes1(),t) : ! TYPE<>.instanceof(TYPE<>.class_DifferentClassesDifferentTypes1(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_A() ? TYPE<>.instanceof(TYPE<>.class_A(),t) : ! TYPE<>.instanceof(TYPE<>.class_A(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_B() ? TYPE<>.instanceof(TYPE<>.class_B(),t) : ! TYPE<>.instanceof(TYPE<>.class_B(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_DifferentClassesDifferentTypes2() ? TYPE<>.instanceof(TYPE<>.class_DifferentClassesDifferentTypes2(),t) : ! TYPE<>.instanceof(TYPE<>.class_DifferentClassesDifferentTypes2(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_For() ? TYPE<>.instanceof(TYPE<>.class_For(),t) : ! TYPE<>.instanceof(TYPE<>.class_For(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__1).Integer__item , write ))
[binder] (\forall* int __i__2;0 <= __i__2 && __i__2 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__2).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__3;0 <= __i__3 && __i__3 < len;Perm( VCTArray.loc(getVCTOption1(c),__i__3).Integer__item , write ))
[binder] (\forall int tid__4;0 <= tid__4 && tid__4 < len;VCTArray.loc(getVCTOption1(b),tid__4).Integer__item == tid__4)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < len && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(a),k_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall int i;0 <= i && i < len && 0 < i;VCTArray.loc(getVCTOption1(c),i).Integer__item == i + 2)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < len;VCTArray.loc(getVCTOption1(b),tid).Integer__item == tid)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall int i;0 < i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == i + 2)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < N;Perm( VCTArray.loc(getVCTOption1(a),i__1).Integer__item , write ))
[binder] (\forall* int i__2;0 <= i__2 && i__2 < N;Perm( VCTArray.loc(getVCTOption1(b),i__2).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__3;0 <= i__3 && i__3 < N;Perm( VCTArray.loc(getVCTOption1(c),i__3).Integer__item , write ))
[binder] (\forall int i__4;0 <= i__4 && i__4 < N;VCTArray.loc(getVCTOption1(b),i__4).Integer__item == i__4)
[binder] (\forall* int i;0 <= i && i < (N - 1 < N ? N - 1 : N);Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < (N - 1 < N ? N - 1 : N);VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < N && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(a),k_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < N && 0 < i;VCTArray.loc(getVCTOption1(a),i - 1).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall int i;0 <= i && i < N && 0 < i;VCTArray.loc(getVCTOption1(c),i).Integer__item == i + 2)
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < N && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(a),k_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall int i;0 < i && i < N;VCTArray.loc(getVCTOption1(c),i).Integer__item == i + 2)
[binder] (\forall* int i__15;0 <= i__15 && i__15 < N;Perm( VCTArray.loc(getVCTOption1(a),i__15).Integer__item , write ))
[binder] (\forall* int i__16;0 <= i__16 && i__16 < N;Perm( VCTArray.loc(getVCTOption1(b),i__16).Integer__item , write ))
[binder] (\forall* int i__17;0 <= i__17 && i__17 < N;Perm( VCTArray.loc(getVCTOption1(c),i__17).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_decr())};true;Process<>.p_seq(p,Process<>.p_method_Future_decr()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_decr(),Process<>.p_empty())))
[binder] (\forall int n{Process<>.p_method_Future_pardecr__Integer(n)};true;(0 < n ? Process<>.p_merge(Process<>.p_method_Future_decr(),Process<>.p_method_Future_pardecr__Integer(n - 1)) : Process<>.p_empty()) == Process<>.p_method_Future_pardecr__Integer(n))
[binder] (\forall Process<> p,int n{Process<>.p_seq(p,Process<>.p_method_Future_pardecr__Integer(n))};true;Process<>.p_seq(p,Process<>.p_method_Future_pardecr__Integer(n)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_pardecr__Integer(n),Process<>.p_empty())))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall seq<boolean> e;( e \memberof G );| e | == n)
[binder] (\forall int j;0 <= j && j < | P |;0 <= P [ j ] && P [ j ] < n)
[binder] (\forall int j;0 <= j && j < | P | - 1;(G [ (P [ j ]) ]) [ (P [ (j + 1) ]) ])
[binder] (\forall* int j__5;0 <= j__5 && j__5 < n;Perm( VCTArray.loc(getVCTOption1(marked__1),j__5).Boolean__item , write ))
[binder] (\forall int j__6;0 <= j__6 && j__6 < i__2;! VCTArray.loc(getVCTOption1(marked__1),j__6).Boolean__item)
[binder] (\forall* int j__7;0 <= j__7 && j__7 < n;Perm( VCTArray.loc(getVCTOption1(marked),j__7).Boolean__item , write ))
[binder] (\forall* int j;0 <= j && j < n;Perm( VCTArray.loc(getVCTOption1(marked),j).Boolean__item , write ))
[binder] (\forall* int j__17;0 <= j__17 && j__17 < n;Perm( VCTArray.loc(getVCTOption1(marked),j__17).Boolean__item , write ))
[binder] (\forall* int j__18;0 <= j__18 && j__18 < n;Perm( VCTArray.loc(getVCTOption1(marked),j__18).Boolean__item , write ))
[binder] (\forall* int j__20;0 <= j__20 && j__20 < n;Perm( VCTArray.loc(getVCTOption1(marked),j__20).Boolean__item , write ))
[binder] (\forall* int j__21;0 <= j__21 && j__21 < n;Perm( VCTArray.loc(getVCTOption1(marked),j__21).Boolean__item , write ))
[binder] (\forall* int j;0 <= j && j < n;Perm( VCTArray.loc(getVCTOption1(marked),j).Boolean__item , write ))
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(getVCTOption1(sys__result),i0).Boolean__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(getVCTOption1(sys__result),i0).Boolean__item == false)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i0__1;0 <= i0__1 && i0__1 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0__1).VCTArray_Ref___item , read ))
[binder] (\forall int i0__2;0 <= i0__2 && i0__2 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0__2).VCTArray_Ref___item) == N)
[binder] (\forall* int i0__3,int i1__4,int j0__5,int j1__6{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0__3).VCTArray_Ref___item,i1__4),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0__5).VCTArray_Ref___item,j1__6)};0 <= i0__3 && i0__3 < M && (0 <= i1__4 && i1__4 < N) && (0 <= j0__5 && j0__5 < M) && (0 <= j1__6 && j1__6 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0__3).VCTArray_Ref___item,i1__4) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0__5).VCTArray_Ref___item,j1__6);i0__3 == j0__5 && i1__4 == j1__6)
[binder] (\forall int i__7;0 <= i__7 && i__7 < | data |;| (data [ i__7 ]) | == N)
[binder] (\forall* int i1__8,int j1__9;0 <= i1__8 && i1__8 < M && (0 <= j1__9 && j1__9 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1__8).VCTArray_Ref___item,j1__9).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int i1__10,int j1__11;0 <= i1__10 && i1__10 < M && (0 <= j1__11 && j1__11 < N);0 <= VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1__10).VCTArray_Ref___item,j1__11).Integer__item && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1__10).VCTArray_Ref___item,j1__11).Integer__item < P)
[binder] (\forall int i1__12,int j1__13;0 <= i1__12 && i1__12 < M && (0 <= j1__13 && j1__13 < N);VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1__12).VCTArray_Ref___item,j1__13).Integer__item == (data [ i1__12 ]) [ j1__13 ])
[binder] (\forall* int i1__14;0 <= i1__14 && i1__14 < P;Perm( VCTArray.loc(getVCTOption1(hist),i1__14).Integer__item , write ))
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int k;0 <= k && k < P;Perm( VCTArray.loc(getVCTOption1(hist),k).Integer__item , write ))
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int k;0 <= k && k < P;Perm( VCTArray.loc(getVCTOption1(hist),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < P;VCTArray.loc(getVCTOption1(hist),k).Integer__item == 0)
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int k;0 <= k && k < P;Perm( VCTArray.loc(getVCTOption1(hist),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < P;VCTArray.loc(getVCTOption1(hist),k).Integer__item == 0)
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int k;0 <= k && k < P;Perm( VCTArray.loc(getVCTOption1(hist),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < P;VCTArray.loc(getVCTOption1(hist),k).Integer__item == ((data [ ii ]) [ jj ] == k ? 1 : 0))
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int k;0 <= k && k < P;Perm( VCTArray.loc(getVCTOption1(hist),k).Integer__item , write ))
[binder] (\forall* int ii,int jj;0 <= ii && ii < M && (0 <= jj && jj < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),ii).VCTArray_Ref___item,jj).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int ii,int jj;0 <= ii && ii < M && (0 <= jj && jj < N);0 <= VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),ii).VCTArray_Ref___item,jj).Integer__item && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),ii).VCTArray_Ref___item,jj).Integer__item < P)
[binder] (\forall int ii,int jj;0 <= ii && ii < M && (0 <= jj && jj < N);VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),ii).VCTArray_Ref___item,jj).Integer__item == (data [ ii ]) [ jj ])
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int ii,int jj;0 <= ii && ii < M && (0 <= jj && jj < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),ii).VCTArray_Ref___item,jj).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int ii,int jj;0 <= ii && ii < M && (0 <= jj && jj < N);0 <= VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),ii).VCTArray_Ref___item,jj).Integer__item && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),ii).VCTArray_Ref___item,jj).Integer__item < P)
[binder] (\forall int ii,int jj;0 <= ii && ii < M && (0 <= jj && jj < N);VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),ii).VCTArray_Ref___item,jj).Integer__item == (data [ ii ]) [ jj ])
[binder] (\forall* int k;0 <= k && k < P;Perm( VCTArray.loc(getVCTOption1(hist),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < P;VCTArray.loc(getVCTOption1(hist),k).Integer__item == \old( VCTArray.loc(getVCTOption1(hist),k).Integer__item ) + MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(0,M),VectorIndex<>.vrange(0,N)),MatrixExpression.mcmp(MatrixExpression.mseq(data),MatrixExpression.mrep(k))))
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);0 <= VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item < P)
[binder] (\forall int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item == (data [ i1 ]) [ j1 ])
[binder] (\forall* int i1;0 <= i1 && i1 < P;Perm( VCTArray.loc(getVCTOption1(hist),i1).Integer__item , write ))
[binder] (\forall* int i0;0 <= i0 && i0 < M;Perm( VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item , read ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1),VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i0).VCTArray_Ref___item,i1) == VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),j0).VCTArray_Ref___item,j1);i0 == j0 && i1 == j1)
[binder] (\forall int i;0 <= i && i < | data |;| (data [ i ]) | == N)
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);0 <= VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item && VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item < P)
[binder] (\forall int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i1).VCTArray_Ref___item,j1).Integer__item == (data [ i1 ]) [ j1 ])
[binder] (\forall* int i1;0 <= i1 && i1 < P;Perm( VCTArray.loc(getVCTOption1(hist),i1).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < P;VCTArray.loc(getVCTOption1(hist),k).Integer__item == MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(0,M),VectorIndex<>.vrange(0,N)),MatrixExpression.mcmp(MatrixExpression.mseq(data),MatrixExpression.mrep(k))))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == VCTFloat<>.zero())
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == 0)
[binder] (\forall seq<seq<T>> xs,int i,int j,VectorIndex<> cols{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs))};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j + 1),cols),MatrixExpression.mseq(xs)) == VectorExpression.vadd(MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs)),VectorExpression.vsum(cols,VectorExpression.vseq(xs [ i ]))))
[binder] (\forall int i,T t{VectorExpression.vget(VectorExpression.vrep(t),i)};true;VectorExpression.vget(VectorExpression.vrep(t),i) == t)
[binder] (\forall int i,int j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == i + j)
[binder] (\forall int i,seq<T> xs{VectorExpression.vget(VectorExpression.vseq(xs),i)};true;VectorExpression.vget(VectorExpression.vseq(xs),i) == xs [ i ])
[binder] (\forall int i,VectorExpression xs,VectorExpression ys{VectorExpression.vget(VectorExpression.vcmp(xs,ys),i)};true;VectorExpression.vget(VectorExpression.vcmp(xs,ys),i) == (VectorExpression.vget(xs,i) == VectorExpression.vget(ys,i) ? 1 : 0))
[binder] (\forall VCTFloat<> i,VCTFloat<> j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == VCTFloat<>.fadd(i,j))
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == VCTFloat<>.zero())
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == 0)
[binder] (\forall VectorExpression xs,int i,int j{VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,j + 1),xs) == VectorExpression.vadd(VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs),VectorExpression.vget(xs,j)))
[binder] (\forall VCTFloat<> f1,VCTFloat<> f2;true;VCTFloat<>.fadd(f1,f2) == VCTFloat<>.fadd(f2,f1))
[binder] (\forall VCTFloat<> f1;true;VCTFloat<>.fadd(f1,VCTFloat<>.zero()) == f1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Application() ? TYPE<>.instanceof(TYPE<>.class_Application(),t) : ! TYPE<>.instanceof(TYPE<>.class_Application(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_History() ? TYPE<>.instanceof(TYPE<>.class_History(),t) : ! TYPE<>.instanceof(TYPE<>.class_History(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_History_incr())};true;Process<>.p_seq(p,Process<>.p_method_History_incr()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_incr(),Process<>.p_empty())))
[binder] (\forall int n{Process<>.p_method_History_single__Integer(n)};true;(0 < n ? Process<>.p_seq(Process<>.p_method_History_incr(),Process<>.p_method_History_single__Integer(n - 1)) : Process<>.p_empty()) == Process<>.p_method_History_single__Integer(n))
[binder] (\forall Process<> p,int n{Process<>.p_seq(p,Process<>.p_method_History_single__Integer(n))};true;Process<>.p_seq(p,Process<>.p_method_History_single__Integer(n)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_single__Integer(n),Process<>.p_empty())))
[binder] (\forall int n,int m{Process<>.p_method_History_dual__Integer__Integer(n,m)};true;Process<>.p_merge(Process<>.p_method_History_single__Integer(n),Process<>.p_method_History_single__Integer(m)) == Process<>.p_method_History_dual__Integer__Integer(n,m))
[binder] (\forall Process<> p,int n,int m{Process<>.p_seq(p,Process<>.p_method_History_dual__Integer__Integer(n,m))};true;Process<>.p_seq(p,Process<>.p_method_History_dual__Integer__Integer(n,m)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_dual__Integer__Integer(n,m),Process<>.p_empty())))
[binder] (\forall Process<> p,int n{Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p)};true;Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p) == Process<>.p_seq(0 < n ? Process<>.p_seq(Process<>.p_method_History_single__Integer(n - 1),Process<>.p_method_History_incr()) : Process<>.p_empty(),p))
[binder] (\forall Process<> p,int n{Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p)};true;Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p) == Process<>.p_seq(0 < n ? Process<>.p_seq(Process<>.p_method_History_single__Integer(n - 1),Process<>.p_method_History_incr()) : Process<>.p_empty(),p))
[binder] (\forall Process<> p,int m,int n{Process<>.p_seq(Process<>.p_method_History_single__Integer(m),Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p))};true;Process<>.p_seq(Process<>.p_method_History_single__Integer(m),Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p)) == Process<>.p_seq(Process<>.p_method_History_single__Integer(m + n),p))
[binder] (\forall Process<> p,int m,int n{Process<>.p_seq(Process<>.p_method_History_single__Integer(m),Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p))};true;Process<>.p_seq(Process<>.p_method_History_single__Integer(m),Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p)) == Process<>.p_seq(Process<>.p_method_History_single__Integer(m + n),p))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Application() ? TYPE<>.instanceof(TYPE<>.class_Application(),t) : ! TYPE<>.instanceof(TYPE<>.class_Application(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_History() ? TYPE<>.instanceof(TYPE<>.class_History(),t) : ! TYPE<>.instanceof(TYPE<>.class_History(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_History_incr())};true;Process<>.p_seq(p,Process<>.p_method_History_incr()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_incr(),Process<>.p_empty())))
[binder] (\forall int n{Process<>.p_method_History_single__Integer(n)};true;(0 < n ? Process<>.p_seq(Process<>.p_method_History_incr(),Process<>.p_method_History_single__Integer(n - 1)) : Process<>.p_empty()) == Process<>.p_method_History_single__Integer(n))
[binder] (\forall Process<> p,int n{Process<>.p_seq(p,Process<>.p_method_History_single__Integer(n))};true;Process<>.p_seq(p,Process<>.p_method_History_single__Integer(n)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_single__Integer(n),Process<>.p_empty())))
[binder] (\forall int n,int m{Process<>.p_method_History_dual__Integer__Integer(n,m)};true;Process<>.p_merge(Process<>.p_method_History_single__Integer(n),Process<>.p_method_History_single__Integer(m)) == Process<>.p_method_History_dual__Integer__Integer(n,m))
[binder] (\forall Process<> p,int n,int m{Process<>.p_seq(p,Process<>.p_method_History_dual__Integer__Integer(n,m))};true;Process<>.p_seq(p,Process<>.p_method_History_dual__Integer__Integer(n,m)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_dual__Integer__Integer(n,m),Process<>.p_empty())))
[binder] (\forall Process<> p,int n{Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p)};true;Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p) == Process<>.p_seq(0 < n ? Process<>.p_seq(Process<>.p_method_History_single__Integer(n - 1),Process<>.p_method_History_incr()) : Process<>.p_empty(),p))
[binder] (\forall Process<> p,int m,int n{Process<>.p_seq(Process<>.p_method_History_single__Integer(m),Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p))};true;Process<>.p_seq(Process<>.p_method_History_single__Integer(m),Process<>.p_seq(Process<>.p_method_History_single__Integer(n),p)) == Process<>.p_seq(Process<>.p_method_History_single__Integer(m + n),p))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Incr() ? TYPE<>.instanceof(TYPE<>.class_Incr(),t) : ! TYPE<>.instanceof(TYPE<>.class_Incr(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_InvokationInGuard() ? TYPE<>.instanceof(TYPE<>.class_InvokationInGuard(),t) : ! TYPE<>.instanceof(TYPE<>.class_InvokationInGuard(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Exercise4() ? TYPE<>.instanceof(TYPE<>.class_Exercise4(),t) : ! TYPE<>.instanceof(TYPE<>.class_Exercise4(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_JavaArrayExamples() ? TYPE<>.instanceof(TYPE<>.class_JavaArrayExamples(),t) : ! TYPE<>.instanceof(TYPE<>.class_JavaArrayExamples(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(b));Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(res));Perm( VCTArray.loc(getVCTOption1(res),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(b));Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(res));Perm( VCTArray.loc(getVCTOption1(res),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));VCTArray.loc(getVCTOption1(res),2 * i).Integer__item == VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(b));VCTArray.loc(getVCTOption1(res),2 * i + 1).Integer__item == VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i__1).Integer__item , 1 ))
[binder] (\forall* int i__2;0 <= i__2 && i__2 < VCTArray.alen(getVCTOption1(b));Perm( VCTArray.loc(getVCTOption1(b),i__2).Integer__item , 1 ))
[binder] (\forall* int i__3;0 <= i__3 && i__3 < VCTArray.alen(getVCTOption1(res));Perm( VCTArray.loc(getVCTOption1(res),i__3).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(b));Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(res));Perm( VCTArray.loc(getVCTOption1(res),i).Integer__item , 1 ))
[binder] (\forall* int i__15;0 <= i__15 && i__15 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i__15).Integer__item , 1 ))
[binder] (\forall* int i__16;0 <= i__16 && i__16 < VCTArray.alen(getVCTOption1(b));Perm( VCTArray.loc(getVCTOption1(b),i__16).Integer__item , 1 ))
[binder] (\forall* int i__17;0 <= i__17 && i__17 < VCTArray.alen(getVCTOption1(res));Perm( VCTArray.loc(getVCTOption1(res),i__17).Integer__item , 1 ))
[binder] (\forall int i__18;0 <= i__18 && i__18 < k__4 / 2;VCTArray.loc(getVCTOption1(res),2 * i__18).Integer__item == VCTArray.loc(getVCTOption1(a),i__18).Integer__item)
[binder] (\forall int i__19;0 <= i__19 && i__19 < k__4 / 2;VCTArray.loc(getVCTOption1(res),2 * i__19 + 1).Integer__item == VCTArray.loc(getVCTOption1(b),i__19).Integer__item)
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(b));Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(res));Perm( VCTArray.loc(getVCTOption1(res),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));VCTArray.loc(getVCTOption1(res),2 * i).Integer__item == VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(b));VCTArray.loc(getVCTOption1(res),2 * i + 1).Integer__item == VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i__21;0 <= i__21 && i__21 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i__21).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;1 <= i && i < (VCTArray.alen(getVCTOption1(a)) - 1 < VCTArray.alen(getVCTOption1(a)) ? VCTArray.alen(getVCTOption1(a)) - 1 : VCTArray.alen(getVCTOption1(a))) + 1;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 ))
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int k__29;0 <= k__29 && k__29 < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k__29).Integer__item , 1 ))
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 ))
[binder] (\forall* int k__35;0 <= k__35 && k__35 < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k__35).Integer__item , 1 ))
[binder] (\forall int k__36;0 <= k__36 && k__36 < i__30;VCTArray.loc(getVCTOption1(ar),k__36).Integer__item == 0)
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int k__37;0 <= k__37 && k__37 < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k__37).Integer__item , write ))
[binder] (\forall* int j;i * N <= j && j < (i + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),j).Integer__item , write ))
[binder] (\forall* int j;i * N <= j && j < (i + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),j).Integer__item , write ))
[binder] (\forall int j;i * N <= j && j < (i + 1) * N;VCTArray.loc(getVCTOption1(ar),j).Integer__item == 0)
[binder] (\forall* int k;i * N <= k && k < (i + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall* int k;i * N <= k && k < (i + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall int k;i * N <= k && k < (i + 1) * N;VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int k;0 <= k && k < M * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall* int k;0 <= k && k < M * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < M * N;VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int k__40;0 <= k__40 && k__40 < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k__40).Integer__item , write ))
[binder] (\forall* int j;0 <= j && j < M * N;Perm( VCTArray.loc(getVCTOption1(ar),j).Integer__item , write ))
[binder] (\forall* int j;0 <= j && j < M * N;Perm( VCTArray.loc(getVCTOption1(ar),j).Integer__item , write ))
[binder] (\forall int j;0 <= j && j < M * N;VCTArray.loc(getVCTOption1(ar),j).Integer__item == 0)
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Overloading() ? TYPE<>.instanceof(TYPE<>.class_Overloading(),t) : ! TYPE<>.instanceof(TYPE<>.class_Overloading(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == VCTFloat<>.zero())
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == 0)
[binder] (\forall seq<seq<T>> xs,int i,int j,VectorIndex<> cols{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs))};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j + 1),cols),MatrixExpression.mseq(xs)) == VectorExpression.vadd(MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs)),VectorExpression.vsum(cols,VectorExpression.vseq(xs [ i ]))))
[binder] (\forall int i,T t{VectorExpression.vget(VectorExpression.vrep(t),i)};true;VectorExpression.vget(VectorExpression.vrep(t),i) == t)
[binder] (\forall int i,int j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == i + j)
[binder] (\forall int i,seq<T> xs{VectorExpression.vget(VectorExpression.vseq(xs),i)};true;VectorExpression.vget(VectorExpression.vseq(xs),i) == xs [ i ])
[binder] (\forall int i,VectorExpression xs,VectorExpression ys{VectorExpression.vget(VectorExpression.vcmp(xs,ys),i)};true;VectorExpression.vget(VectorExpression.vcmp(xs,ys),i) == (VectorExpression.vget(xs,i) == VectorExpression.vget(ys,i) ? 1 : 0))
[binder] (\forall VCTFloat<> i,VCTFloat<> j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == VCTFloat<>.fadd(i,j))
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == VCTFloat<>.zero())
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == 0)
[binder] (\forall seq<T> xs;true;VectorExpression.vsize(VectorExpression.vseq(xs)) == | xs |)
[binder] (\forall T t;true;VectorExpression.vsize(VectorExpression.vrep(t)) == 1)
[binder] (\forall VectorExpression xs,int i,int j{VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs)};true;i >= 0 && j > i ==> VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs) == VectorExpression.vadd(VectorExpression.vsum(VectorIndex<>.vrange(i,j - 1),xs),VectorExpression.vget(xs,j - 1)))
[binder] (\forall VectorExpression xs,int i,int j{VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs)};true;i < 0 || (i >= j || j >= VectorExpression.vsize(xs)) ==> VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs) == 0)
[binder] (\forall VCTFloat<> f1,VCTFloat<> f2;true;VCTFloat<>.fadd(f1,f2) == VCTFloat<>.fadd(f2,f1))
[binder] (\forall VCTFloat<> f1;true;VCTFloat<>.fadd(f1,VCTFloat<>.zero()) == f1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Node() ? TYPE<>.instanceof(TYPE<>.class_Node(),t) : ! TYPE<>.instanceof(TYPE<>.class_Node(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_AtomicNode() ? TYPE<>.instanceof(TYPE<>.class_AtomicNode(),t) : ! TYPE<>.instanceof(TYPE<>.class_AtomicNode(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Integer() ? TYPE<>.instanceof(TYPE<>.class_Integer(),t) : ! TYPE<>.instanceof(TYPE<>.class_Integer(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Queue() ? TYPE<>.instanceof(TYPE<>.class_Queue(),t) : ! TYPE<>.instanceof(TYPE<>.class_Queue(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_History() ? TYPE<>.instanceof(TYPE<>.class_History(),t) : ! TYPE<>.instanceof(TYPE<>.class_History(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Integer() ? TYPE<>.instanceof(TYPE<>.class_Integer(),t) : ! TYPE<>.instanceof(TYPE<>.class_Integer(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Node() ? TYPE<>.instanceof(TYPE<>.class_Node(),t) : ! TYPE<>.instanceof(TYPE<>.class_Node(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_AtomicNode() ? TYPE<>.instanceof(TYPE<>.class_AtomicNode(),t) : ! TYPE<>.instanceof(TYPE<>.class_AtomicNode(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Queue() ? TYPE<>.instanceof(TYPE<>.class_Queue(),t) : ! TYPE<>.instanceof(TYPE<>.class_Queue(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p,int e{Process<>.p_seq(p,Process<>.p_method_History_put__Integer(e))};true;Process<>.p_seq(p,Process<>.p_method_History_put__Integer(e)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_put__Integer(e),Process<>.p_empty())))
[binder] (\forall Process<> p,int e,boolean success{Process<>.p_seq(p,Process<>.p_method_History_try_put__Integer__Boolean(e,success))};true;Process<>.p_seq(p,Process<>.p_method_History_try_put__Integer__Boolean(e,success)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_try_put__Integer__Boolean(e,success),Process<>.p_empty())))
[binder] (\forall Process<> p,int e{Process<>.p_seq(p,Process<>.p_method_History_get__Integer(e))};true;Process<>.p_seq(p,Process<>.p_method_History_get__Integer(e)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_get__Integer(e),Process<>.p_empty())))
[binder] (\forall seq<int> q2;true;diz.q_hist_act + q2 == seq<int>{e} + (diz.q_hist_value + q2))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p,int rank,int msg{Process<>.p_seq(p,Process<>.p_method_Future_Send__Integer__Integer(rank,msg))};true;Process<>.p_seq(p,Process<>.p_method_Future_Send__Integer__Integer(rank,msg)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_Send__Integer__Integer(rank,msg),Process<>.p_empty())))
[binder] (\forall Process<> p,int rank,int msg{Process<>.p_seq(p,Process<>.p_method_Future_Recv__Integer__Integer(rank,msg))};true;Process<>.p_seq(p,Process<>.p_method_Future_Recv__Integer__Integer(rank,msg)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_Recv__Integer__Integer(rank,msg),Process<>.p_empty())))
[binder] (\forall Process<> p,int rank,int v{Process<>.p_seq(p,Process<>.p_method_Future_Done__Integer__Integer(rank,v))};true;Process<>.p_seq(p,Process<>.p_method_Future_Done__Integer__Integer(rank,v)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_Done__Integer__Integer(rank,v),Process<>.p_empty())))
[binder] (\forall int rank,int size,int v,int w,int max,int n{Process<>.p_method_Future_SigmaRecv__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n)};true;(0 < w ? Process<>.p_choice(Process<>.p_seq(Process<>.p_method_Future_Recv__Integer__Integer((rank - 1) % size,w),Process<>.p_method_Future_Check__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n)),Process<>.p_method_Future_SigmaRecv__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w - 1,max,n)) : Process<>.p_seq(Process<>.p_method_Future_Recv__Integer__Integer((rank - 1) % size,w),Process<>.p_method_Future_Check__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n))) == Process<>.p_method_Future_SigmaRecv__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n))
[binder] (\forall Process<> p,int rank,int size,int v,int w,int max,int n{Process<>.p_seq(p,Process<>.p_method_Future_SigmaRecv__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n))};true;Process<>.p_seq(p,Process<>.p_method_Future_SigmaRecv__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_SigmaRecv__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n),Process<>.p_empty())))
[binder] (\forall int rank,int size,int v,int w,int max,int n{Process<>.p_method_Future_Check__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n)};true;Process<>.p_method_Future_Elect__Integer__Integer__Integer__Integer__Integer(rank,size,v <= w ? w : v,max,n + 1) == Process<>.p_method_Future_Check__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n))
[binder] (\forall Process<> p,int rank,int size,int v,int w,int max,int n{Process<>.p_seq(p,Process<>.p_method_Future_Check__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n))};true;Process<>.p_seq(p,Process<>.p_method_Future_Check__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_Check__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,w,max,n),Process<>.p_empty())))
[binder] (\forall int rank,int size,int v,int max,int n{Process<>.p_method_Future_Elect__Integer__Integer__Integer__Integer__Integer(rank,size,v,max,n)};true;(n < size ? Process<>.p_seq(Process<>.p_method_Future_Send__Integer__Integer((rank + 1) % size,v),Process<>.p_method_Future_SigmaRecv__Integer__Integer__Integer__Integer__Integer__Integer(rank,size,v,max - 1,max,n)) : Process<>.p_method_Future_Done__Integer__Integer(rank,v)) == Process<>.p_method_Future_Elect__Integer__Integer__Integer__Integer__Integer(rank,size,v,max,n))
[binder] (\forall Process<> p,int rank,int size,int v,int max,int n{Process<>.p_seq(p,Process<>.p_method_Future_Elect__Integer__Integer__Integer__Integer__Integer(rank,size,v,max,n))};true;Process<>.p_seq(p,Process<>.p_method_Future_Elect__Integer__Integer__Integer__Integer__Integer(rank,size,v,max,n)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_Elect__Integer__Integer__Integer__Integer__Integer(rank,size,v,max,n),Process<>.p_empty())))
[binder] (\forall int rank,int size,seq<int> xs,int max{Process<>.p_method_Future_Spawn__Integer__Integer__Sequence$Integer$__Integer(rank,size,xs,max)};true;(rank < size ? Process<>.p_merge(Process<>.p_method_Future_Elect__Integer__Integer__Integer__Integer__Integer(rank,size,xs [ rank ],max,0),Process<>.p_method_Future_Spawn__Integer__Integer__Sequence$Integer$__Integer(rank + 1,size,xs,max)) : Process<>.p_empty()) == Process<>.p_method_Future_Spawn__Integer__Integer__Sequence$Integer$__Integer(rank,size,xs,max))
[binder] (\forall Process<> p,int rank,int size,seq<int> xs,int max{Process<>.p_seq(p,Process<>.p_method_Future_Spawn__Integer__Integer__Sequence$Integer$__Integer(rank,size,xs,max))};true;Process<>.p_seq(p,Process<>.p_method_Future_Spawn__Integer__Integer__Sequence$Integer$__Integer(rank,size,xs,max)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_Spawn__Integer__Integer__Sequence$Integer$__Integer(rank,size,xs,max),Process<>.p_empty())))
[binder] (\forall int size,seq<int> xs,int max{Process<>.p_method_Future_Start__Integer__Sequence$Integer$__Integer(size,xs,max)};true;Process<>.p_method_Future_Spawn__Integer__Integer__Sequence$Integer$__Integer(0,size,xs,max) == Process<>.p_method_Future_Start__Integer__Sequence$Integer$__Integer(size,xs,max))
[binder] (\forall Process<> p,int size,seq<int> xs,int max{Process<>.p_seq(p,Process<>.p_method_Future_Start__Integer__Sequence$Integer$__Integer(size,xs,max))};true;Process<>.p_seq(p,Process<>.p_method_Future_Start__Integer__Sequence$Integer$__Integer(size,xs,max)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_Start__Integer__Sequence$Integer$__Integer(size,xs,max),Process<>.p_empty())))
[binder] (\forall int i;0 <= i && i < | diz.channel_hist_value | && i != rank;diz.channel_hist_value [ i ] == diz.channel_hist_act [ i ])
[binder] (\forall int i;0 <= i && i < | diz.channel_hist_value | && i != rank;diz.channel_hist_value [ i ] == diz.channel_hist_act [ i ])
[binder] (\forall int i;0 <= i && i < | diz.results_hist_value | && i != rank;diz.results_hist_value [ i ] == diz.results_hist_act [ i ])
[binder] (\forall int i,int j;0 <= i && i < | xs | && (0 <= j && j < | xs | && i != j);xs [ i ] != xs [ j ])
[binder] (\forall int i;0 <= i && i < | xs |;0 <= xs [ i ] && xs [ i ] < max)
[binder] (\forall int i;0 <= i && i < | diz.results_hist_init |;diz.results_hist_init [ i ] == diz.results_hist_init [ method_Program_maxint__Sequence$Integer$__Integer__Integer(xs,0,0) ])
[binder] (\forall int j;0 <= j && j < | xs | && j != i;\result [ j ] == xs [ j ])
[binder] (\forall int l;0 <= l && l < i;xs [ l ] <= xs [ j ])
[binder] (\forall int l;i <= l && l < | xs |;xs [ l ] <= xs [ \result ])
[binder] (\forall int i,int j;0 <= i && i < diz.field_Program_size && (0 <= j && j < | (diz.field_Program_f.channel_hist_value [ i ]) |);0 <= (diz.field_Program_f.channel_hist_value [ i ]) [ j ] && (diz.field_Program_f.channel_hist_value [ i ]) [ j ] < diz.field_Program_maxvalue)
[binder] (\forall int i__7,int j__8;0 <= i__7 && i__7 < | f.channel_hist_value | && (0 <= j__8 && j__8 < | (f.channel_hist_value [ i__7 ]) |);0 <= (f.channel_hist_value [ i__7 ]) [ j__8 ] && (f.channel_hist_value [ i__7 ]) [ j__8 ] < max)
[binder] (\forall int i,int j;0 <= i && i < | f.channel_hist_value | && (0 <= j && j < | (f.channel_hist_value [ i ]) |);0 <= (f.channel_hist_value [ i ]) [ j ] && (f.channel_hist_value [ i ]) [ j ] < max)
[binder] (\forall int j;0 <= j && j < | xs | && j != i;\result [ j ] == xs [ j ])
[binder] (\forall int j;0 <= j && j < | xs | && j != i;\result [ j ] == xs [ j ])
[binder] (\forall int j,int k;0 <= j && j < | xs | && (0 <= k && k < | xs | && j != k);xs [ j ] != xs [ k ])
[binder] (\forall int j;0 <= j && j < | xs |;0 <= xs [ j ] && xs [ j ] < max)
[binder] (\forall int j__38,int k__39;0 <= j__38 && j__38 < | xs | && (0 <= k__39 && k__39 < | xs | && j__38 != k__39);xs [ j__38 ] != xs [ k__39 ])
[binder] (\forall int j__40;0 <= j__40 && j__40 < | xs |;0 <= xs [ j__40 ] && xs [ j__40 ] < max)
[binder] (\forall int j__41;0 <= j__41 && j__41 < i__28;| (f__25.channel_hist_value [ j__41 ]) | == 0)
[binder] (\forall int j__42;0 <= j__42 && j__42 < i__28;f__25.results_hist_value [ j__42 ] == 0)
[binder] (\forall int i__43;0 <= i__43 && i__43 < | f__25.results_hist_value |;f__25.results_hist_value [ i__43 ] == f__25.results_hist_value [ method_Program_maxint__Sequence$Integer$__Integer__Integer(xs,0,0) ])
[binder] (\forall int j,int k;0 <= j && j < | xs | && (0 <= k && k < | xs | && j != k);xs [ j ] != xs [ k ])
[binder] (\forall int j;0 <= j && j < | xs |;0 <= xs [ j ] && xs [ j ] < max)
[binder] (\forall int j;0 <= j && j < | xs |;0 <= xs [ j ] && xs [ j ] < pr.field_Program_maxvalue)
[binder] (\forall int j;0 <= j && j < | xs |;0 <= xs [ j ] && xs [ j ] < pr.field_Program_maxvalue)
[binder] (\forall int j__76,int k__77;0 <= j__76 && j__76 < | xs | && (0 <= k__77 && k__77 < | xs | && j__76 != k__77);xs [ j__76 ] != xs [ k__77 ])
[binder] (\forall int j__78;0 <= j__78 && j__78 < | xs |;0 <= xs [ j__78 ] && xs [ j__78 ] < max)
[binder] (\forall int j__79;0 <= j__79 && j__79 < | xs |;0 <= xs [ j__79 ] && xs [ j__79 ] < pr.field_Program_maxvalue)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_List() ? TYPE<>.instanceof(TYPE<>.class_List(),t) : ! TYPE<>.instanceof(TYPE<>.class_List(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_MagicWands() ? TYPE<>.instanceof(TYPE<>.class_MagicWands(),t) : ! TYPE<>.instanceof(TYPE<>.class_MagicWands(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_List() ? TYPE<>.instanceof(TYPE<>.class_List(),t) : ! TYPE<>.instanceof(TYPE<>.class_List(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_List() ? TYPE<>.instanceof(TYPE<>.class_List(),t) : ! TYPE<>.instanceof(TYPE<>.class_List(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall T x,List xs;true;List.adt_length(List.adt_cons(x,xs)) == List.adt_length(xs) + 1)
[binder] (\forall T z,List zs;true;List.adt_cons(z,zs) != List.adt_nil())
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall int g;0 <= g && g < n;\result [ g ] == xs [ g ])
[binder] (\forall int g;n < g && g < | xs |;\result [ g ] == xs [ g ])
[binder] (\forall int i;0 <= i && i < | xs | - 1;xs [ i ] <= xs [ (i + 1) ])
[binder] (\forall int i;0 <= i && i < | xs |;xs [ i ] <= xs [ \result ])
[binder] (\forall int i;j <= i && i < | xs |;xs [ i ] <= xs [ \result ])
[binder] (\forall int l__7;0 <= l__7 && l__7 < | result__2 |;( result__2 [ l__7 ] \memberof input ))
[binder] (\forall int l__8;0 <= l__8 && l__8 < | unsorted__1 |;( unsorted__1 [ l__8 ] \memberof input ))
[binder] (\forall int l__9;0 <= l__9 && l__9 < | result__2 |;unsorted__1 [ method_MaxSort_max__Sequence$Integer$(unsorted__1) ] <= result__2 [ l__9 ])
[binder] (\forall int m__13;0 <= m__13 && m__13 < right__12;res__11 [ m__13 ] <= res__11 [ right__12 ])
[binder] (\forall int m__14;right__12 < m__14 && m__14 < | res__11 |;res__11 [ right__12 ] <= res__11 [ m__14 ])
[binder] (\forall int k__18;0 <= k__18 && k__18 < | xs | && k__18 != i && k__18 != j;sys__result [ k__18 ] == xs [ k__18 ])
[binder] (\forall int k;0 <= k && k < | xs | && k != i && k != j;sys__result [ k ] == xs [ k ])
[binder] (\forall int j0;0 <= j0 && j0 < i0;\result [ j0 ] == seq0 [ j0 ])
[binder] (\forall int j0;i0 <= j0 && j0 < | \result |;\result [ j0 ] == seq0 [ (j0 + 1) ])
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_MultiDimArray() ? TYPE<>.instanceof(TYPE<>.class_MultiDimArray(),t) : ! TYPE<>.instanceof(TYPE<>.class_MultiDimArray(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(sys__result,i0).Ref__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(sys__result,i0).Ref__item == null)
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(sys__result,i0).VCTOption_VCTArray_Ref____item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(sys__result,i0).VCTOption_VCTArray_Ref____item == VCTOption.VCTNone())
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(sys__result,i0).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(sys__result,i0).Integer__item == 0)
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(sys__result,i0).VCTOption_VCTArray_Ref____item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(sys__result,i0).VCTOption_VCTArray_Ref____item == VCTOption.VCTNone())
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(sys__result,i0).VCTOption_VCTArray_Ref____item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(sys__result,i0).VCTOption_VCTArray_Ref____item == VCTOption.VCTNone())
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Exception() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Exception(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Exception(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_MyClass() ? TYPE<>.instanceof(TYPE<>.class_MyClass(),t) : ! TYPE<>.instanceof(TYPE<>.class_MyClass(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_RuntimeException() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_RuntimeException(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_RuntimeException(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_MyClass() ? TYPE<>.instanceof(TYPE<>.class_MyClass(),t) : ! TYPE<>.instanceof(TYPE<>.class_MyClass(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Future() ? TYPE<>.instanceof(TYPE<>.class_Future(),t) : ! TYPE<>.instanceof(TYPE<>.class_Future(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Device() ? TYPE<>.instanceof(TYPE<>.class_Device(),t) : ! TYPE<>.instanceof(TYPE<>.class_Device(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Lock() ? TYPE<>.instanceof(TYPE<>.class_Lock(),t) : ! TYPE<>.instanceof(TYPE<>.class_Lock(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Sender() ? TYPE<>.instanceof(TYPE<>.class_Sender(),t) : ! TYPE<>.instanceof(TYPE<>.class_Sender(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Reader() ? TYPE<>.instanceof(TYPE<>.class_Reader(),t) : ! TYPE<>.instanceof(TYPE<>.class_Reader(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_p_send())};true;Process<>.p_seq(p,Process<>.p_method_Future_p_send()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_p_send(),Process<>.p_empty())))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_receive())};true;Process<>.p_seq(p,Process<>.p_method_Future_receive()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_receive(),Process<>.p_empty())))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_clear())};true;Process<>.p_seq(p,Process<>.p_method_Future_clear()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_clear(),Process<>.p_empty())))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_nsar())};true;Process<>.p_seq(p,Process<>.p_method_Future_nsar()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_nsar(),Process<>.p_empty())))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_rs())};true;Process<>.p_seq(p,Process<>.p_method_Future_rs()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_rs(),Process<>.p_empty())))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_OnlyClass() ? TYPE<>.instanceof(TYPE<>.class_OnlyClass(),t) : ! TYPE<>.instanceof(TYPE<>.class_OnlyClass(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_OnlyExtends() ? TYPE<>.instanceof(TYPE<>.class_OnlyExtends(),t) : ! TYPE<>.instanceof(TYPE<>.class_OnlyExtends(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_MyClass() ? TYPE<>.instanceof(TYPE<>.class_MyClass(),t) : ! TYPE<>.instanceof(TYPE<>.class_MyClass(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__1).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__2;0 <= __i__2 && __i__2 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__2).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__3;0 <= __i__3 && __i__3 < len;Perm( VCTArray.loc(getVCTOption1(c),__i__3).Integer__item , write ))
[binder] (\forall* int __i__4;0 <= __i__4 && __i__4 < len;Perm( VCTArray.loc(getVCTOption1(d),__i__4).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == \old( VCTArray.loc(getVCTOption1(c),i).Integer__item ) + VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(d),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(d),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(d),i).Integer__item == VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(d),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(d),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(d),i).Integer__item == \old( VCTArray.loc(getVCTOption1(d),i).Integer__item ) * VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(c),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item + VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(d),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item * VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(c),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item + VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(d),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item * VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__1).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__2;0 <= __i__2 && __i__2 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__2).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__3;0 <= __i__3 && __i__3 < len;Perm( VCTArray.loc(getVCTOption1(c),__i__3).Integer__item , write ))
[binder] (\forall* int __i__4;0 <= __i__4 && __i__4 < len;Perm( VCTArray.loc(getVCTOption1(d),__i__4).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == \old( VCTArray.loc(getVCTOption1(c),i).Integer__item ) + VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(d),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(d),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(d),i).Integer__item == VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(d),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(d),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(d),i).Integer__item == \old( VCTArray.loc(getVCTOption1(d),i).Integer__item ) * VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(c),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item + VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(d),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item * VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(d),__i).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(c),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item + VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(d),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item * VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__1).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__2;0 <= __i__2 && __i__2 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__2).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__3;0 <= __i__3 && __i__3 < len;Perm( VCTArray.loc(getVCTOption1(c),__i__3).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == \old( VCTArray.loc(getVCTOption1(c),i).Integer__item ) + VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(c),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item + VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(c),k).Integer__item == VCTArray.loc(getVCTOption1(a),k).Integer__item + VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__1).Integer__item , write ))
[binder] (\forall* int __i__2;0 <= __i__2 && __i__2 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__2).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(a),k).Integer__item == VCTArray.loc(getVCTOption1(b),k).Integer__item)
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(b),k).Integer__item == \old( VCTArray.loc(getVCTOption1(b),k).Integer__item ))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__1).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == 0)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(a),k).Integer__item == 0)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall T x;true;Option.adt_None() != Option.adt_Some(x))
[binder] (\forall T x;true;Option.adt_get(Option.adt_Some(x)) == x)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(x),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(z),i).Integer__item , 1 \ 20 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(x),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(z),i).Integer__item , 1 \ 20 ))
[binder] (\forall* int j;0 <= j && j < 10;Perm( VCTArray.loc(getVCTOption1(y),j).Integer__item , 1 ))
[binder] (\forall* int j;0 <= j && j < 10;Perm( VCTArray.loc(getVCTOption1(y),j).Integer__item , 1 ))
[binder] (\forall* int k;0 <= k && k < 10;Perm( VCTArray.loc(getVCTOption1(z),k).Integer__item , 1 ))
[binder] (\forall* int k;0 <= k && k < 10;Perm( VCTArray.loc(getVCTOption1(y),k).Integer__item , 1 \ 2 ))
[binder] (\forall* int k;0 <= k && k < 10;Perm( VCTArray.loc(getVCTOption1(z),k).Integer__item , 1 ))
[binder] (\forall* int k;0 <= k && k < 10;Perm( VCTArray.loc(getVCTOption1(y),k).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(x),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(y),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(z),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(x),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(y),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(z),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(x),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(y),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(z),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(x),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(y),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(z),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(x),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(y),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < 10;Perm( VCTArray.loc(getVCTOption1(z),i).Integer__item , 1 ))
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < M;Perm( VCTArray.loc(getVCTOption1(a),i__1).Integer__item , 1 ))
[binder] (\forall* int i__2;0 <= i__2 && i__2 < M;Perm( VCTArray.loc(getVCTOption1(b),i__2).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__3;0 <= i__3 && i__3 < M;Perm( VCTArray.loc(getVCTOption1(c),i__3).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < M;VCTArray.loc(getVCTOption1(a),i).Integer__item == VCTArray.loc(getVCTOption1(b),i).Integer__item + VCTArray.loc(getVCTOption1(c),i).Integer__item)
[binder] (\forall* int i;from <= i && i < upto;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int i;from <= i && i < upto;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;from <= i && i < upto;VCTArray.loc(getVCTOption1(ar),i).Integer__item == e1 [ (i - from) ] + e2 [ (i - from) ])
[binder] (\forall* int i;from <= i && i < to;Perm( VCTArray.loc(getVCTOption1(array),i).Integer__item , read ))
[binder] (\forall int i;from <= i && i < to;VCTArray.loc(getVCTOption1(array),i).Integer__item == \result [ (i - from) ])
[binder] (\forall int i;0 <= i && i < to - from;VCTArray.loc(getVCTOption1(array),i + from).Integer__item == \result [ i ])
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < M;Perm( VCTArray.loc(getVCTOption1(ar),i__1).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < M;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 2)
[binder] (\forall* int i;from <= i && i < upto;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int i;from <= i && i < upto;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;from <= i && i < upto;VCTArray.loc(getVCTOption1(ar),i).Integer__item == e1 [ (i - from) ] + e2 [ (i - from) ])
[binder] (\forall* int i;from <= i && i < upto;Perm( VCTArray.loc(ar,i).Integer__item , write ))
[binder] (\forall* int i;from <= i && i < upto;Perm( VCTArray.loc(ar,i).Integer__item , write ))
[binder] (\forall int i;from <= i && i < upto;VCTArray.loc(ar,i).Integer__item == c)
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(sys__result,i0).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(sys__result,i0).Integer__item == 0)
[binder] (\forall* int i;from <= i && i < to;Perm( VCTArray.loc(array,i).Integer__item , read ))
[binder] (\forall int i;from <= i && i < to;VCTArray.loc(array,i).Integer__item == \result [ (i - from) ])
[binder] (\forall int i;0 <= i && i < to - from;VCTArray.loc(array,i + from).Integer__item == \result [ i ])
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_quickselect_DOT_QuickSelect() ? TYPE<>.instanceof(TYPE<>.class_quickselect_DOT_QuickSelect(),t) : ! TYPE<>.instanceof(TYPE<>.class_quickselect_DOT_QuickSelect(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a)) && (i < low || high < i);Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;low <= i && i <= high;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\exists int i;low <= i && i <= high;VCTArray.loc(getVCTOption1(a),i).Integer__item == pivot)
[binder] (\forall* int i__15;0 <= i__15 && i__15 < VCTArray.alen(getVCTOption1(a)) && (i__15 < low || high < i__15);Perm( VCTArray.loc(getVCTOption1(a),i__15).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__16;low <= i__16 && i__16 <= high;Perm( VCTArray.loc(getVCTOption1(a),i__16).Integer__item , write ))
[binder] (\forall int i__17;low <= i__17 && i__17 < l__11;VCTArray.loc(getVCTOption1(a),i__17).Integer__item < pivot)
[binder] (\forall int i__18;l__11 <= i__18 && h__12 < i__18 && i__18 <= high;pivot <= VCTArray.loc(getVCTOption1(a),i__18).Integer__item)
[binder] (\exists int i__19;l__11 <= i__19 && i__19 <= h__12;VCTArray.loc(getVCTOption1(a),i__19).Integer__item == pivot)
[binder] (\forall int i__20,int j__21;0 <= i__20 && i__20 < low && (low <= j__21 && j__21 < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i__20).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j__21).Integer__item ))
[binder] (\forall int k__22,int m__23;0 <= k__22 && k__22 < low && (low <= m__23 && m__23 < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k__22).Integer__item <= VCTArray.loc(getVCTOption1(a),m__23).Integer__item)
[binder] (\forall int i__24,int j__25;0 <= i__24 && i__24 <= high && (high < j__25 && j__25 < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i__24).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j__25).Integer__item ))
[binder] (\forall int k__26,int m__27;0 <= k__26 && k__26 <= high && (high < m__27 && m__27 < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k__26).Integer__item <= VCTArray.loc(getVCTOption1(a),m__27).Integer__item)
[binder] (\forall* int i__28;0 <= i__28 && i__28 < VCTArray.alen(getVCTOption1(a)) && (i__28 < low || high < i__28);Perm( VCTArray.loc(getVCTOption1(a),i__28).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__29;low <= i__29 && i__29 <= high;Perm( VCTArray.loc(getVCTOption1(a),i__29).Integer__item , write ))
[binder] (\forall int i__30;low <= i__30 && i__30 < l__11;VCTArray.loc(getVCTOption1(a),i__30).Integer__item < pivot)
[binder] (\forall int i__31;l__11 <= i__31 && h__12 < i__31 && i__31 <= high;pivot <= VCTArray.loc(getVCTOption1(a),i__31).Integer__item)
[binder] (\exists int i__32;l__11 <= i__32 && i__32 <= h__12;VCTArray.loc(getVCTOption1(a),i__32).Integer__item == pivot)
[binder] (\forall int i__33,int j__34;0 <= i__33 && i__33 < low && (low <= j__34 && j__34 < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i__33).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j__34).Integer__item ))
[binder] (\forall int k__35,int m__36;0 <= k__35 && k__35 < low && (low <= m__36 && m__36 < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k__35).Integer__item <= VCTArray.loc(getVCTOption1(a),m__36).Integer__item)
[binder] (\forall int i__37,int j__38;0 <= i__37 && i__37 <= high && (high < j__38 && j__38 < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i__37).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j__38).Integer__item ))
[binder] (\forall int k__39,int m__40;0 <= k__39 && k__39 <= high && (high < m__40 && m__40 < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k__39).Integer__item <= VCTArray.loc(getVCTOption1(a),m__40).Integer__item)
[binder] (\forall* int i__41;0 <= i__41 && i__41 < VCTArray.alen(getVCTOption1(a)) && (i__41 < low || high < i__41);Perm( VCTArray.loc(getVCTOption1(a),i__41).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__42;low <= i__42 && i__42 <= high;Perm( VCTArray.loc(getVCTOption1(a),i__42).Integer__item , write ))
[binder] (\forall int i__43;low <= i__43 && i__43 < l__11;VCTArray.loc(getVCTOption1(a),i__43).Integer__item < pivot)
[binder] (\forall int i__44;l__11 <= i__44 && h__12 < i__44 && i__44 <= high;pivot <= VCTArray.loc(getVCTOption1(a),i__44).Integer__item)
[binder] (\exists int i__45;l__11 <= i__45 && i__45 <= h__12;VCTArray.loc(getVCTOption1(a),i__45).Integer__item == pivot)
[binder] (\forall int i__46,int j__47;0 <= i__46 && i__46 < low && (low <= j__47 && j__47 < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i__46).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j__47).Integer__item ))
[binder] (\forall int k__48,int m__49;0 <= k__48 && k__48 < low && (low <= m__49 && m__49 < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k__48).Integer__item <= VCTArray.loc(getVCTOption1(a),m__49).Integer__item)
[binder] (\forall int i__50,int j__51;0 <= i__50 && i__50 <= high && (high < j__51 && j__51 < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i__50).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j__51).Integer__item ))
[binder] (\forall int k__52,int m__53;0 <= k__52 && k__52 <= high && (high < m__53 && m__53 < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k__52).Integer__item <= VCTArray.loc(getVCTOption1(a),m__53).Integer__item)
[binder] (\forall* int i__54;0 <= i__54 && i__54 < VCTArray.alen(getVCTOption1(a)) && (i__54 < low || high < i__54);Perm( VCTArray.loc(getVCTOption1(a),i__54).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__55;low <= i__55 && i__55 <= high;Perm( VCTArray.loc(getVCTOption1(a),i__55).Integer__item , write ))
[binder] (\forall int i__56;low <= i__56 && i__56 < sys__result;VCTArray.loc(getVCTOption1(a),i__56).Integer__item < pivot)
[binder] (\forall int i__57;sys__result <= i__57 && i__57 <= high;pivot <= VCTArray.loc(getVCTOption1(a),i__57).Integer__item)
[binder] (\forall int i__58,int j__59;low <= i__58 && i__58 < sys__result && (sys__result <= j__59 && j__59 <= high);VCTArray.loc(getVCTOption1(a),i__58).Integer__item < VCTArray.loc(getVCTOption1(a),j__59).Integer__item)
[binder] (\forall int i__60,int j__61;low <= i__60 && i__60 <= sys__result && (sys__result <= j__61 && j__61 <= high);VCTArray.loc(getVCTOption1(a),i__60).Integer__item <= VCTArray.loc(getVCTOption1(a),j__61).Integer__item)
[binder] (\forall int i__62,int j__63;0 <= i__62 && i__62 < low && (low <= j__63 && j__63 < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i__62).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j__63).Integer__item ))
[binder] (\forall int k__64,int l__65;0 <= k__64 && k__64 < low && (low <= l__65 && l__65 < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k__64).Integer__item <= VCTArray.loc(getVCTOption1(a),l__65).Integer__item)
[binder] (\forall int i__66,int j__67;0 <= i__66 && i__66 <= high && (high < j__67 && j__67 < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i__66).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j__67).Integer__item ))
[binder] (\forall int k__68,int m__69;0 <= k__68 && k__68 <= high && (high < m__69 && m__69 < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k__68).Integer__item <= VCTArray.loc(getVCTOption1(a),m__69).Integer__item)
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a)) && (i < low || high < i);Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;low <= i && i <= high;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall int i;low <= i && i < sys__result;VCTArray.loc(getVCTOption1(a),i).Integer__item < pivot)
[binder] (\forall int i;sys__result <= i && i <= high;pivot <= VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall int i,int j;low <= i && i < sys__result && (sys__result <= j && j <= high);VCTArray.loc(getVCTOption1(a),i).Integer__item < VCTArray.loc(getVCTOption1(a),j).Integer__item)
[binder] (\forall int i,int j;low <= i && i <= sys__result && (sys__result <= j && j <= high);VCTArray.loc(getVCTOption1(a),i).Integer__item <= VCTArray.loc(getVCTOption1(a),j).Integer__item)
[binder] (\forall int i,int j;0 <= i && i < low && (low <= j && j < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j).Integer__item ))
[binder] (\forall int k,int l;0 <= k && k < low && (low <= l && l < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k).Integer__item <= VCTArray.loc(getVCTOption1(a),l).Integer__item)
[binder] (\forall int i,int j;0 <= i && i <= high && (high < j && j < VCTArray.alen(getVCTOption1(a)));\old( VCTArray.loc(getVCTOption1(a),i).Integer__item ) <= \old( VCTArray.loc(getVCTOption1(a),j).Integer__item ))
[binder] (\forall int k,int m;0 <= k && k <= high && (high < m && m < VCTArray.alen(getVCTOption1(a)));VCTArray.loc(getVCTOption1(a),k).Integer__item <= VCTArray.loc(getVCTOption1(a),m).Integer__item)
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(list));Perm( VCTArray.loc(getVCTOption1(list),i).Integer__item , write ))
[binder] (\forall* int i__83;0 <= i__83 && i__83 < VCTArray.alen(getVCTOption1(list));Perm( VCTArray.loc(getVCTOption1(list),i__83).Integer__item , write ))
[binder] (\forall int i__84,int j__85;0 <= i__84 && i__84 < left__70 && (left__70 <= j__85 && j__85 < VCTArray.alen(getVCTOption1(list)));VCTArray.loc(getVCTOption1(list),i__84).Integer__item <= VCTArray.loc(getVCTOption1(list),j__85).Integer__item)
[binder] (\forall int i__86,int j__87;0 <= i__86 && i__86 <= right__71 && (right__71 < j__87 && j__87 < VCTArray.alen(getVCTOption1(list)));VCTArray.loc(getVCTOption1(list),i__86).Integer__item <= VCTArray.loc(getVCTOption1(list),j__87).Integer__item)
[binder] (\forall* int i__88;0 <= i__88 && i__88 < VCTArray.alen(getVCTOption1(list));Perm( VCTArray.loc(getVCTOption1(list),i__88).Integer__item , write ))
[binder] (\exists int i__89;0 <= i__89 && i__89 < VCTArray.alen(getVCTOption1(list));VCTArray.loc(getVCTOption1(list),i__89).Integer__item == sys__result)
[binder] (\forall int i__90;0 <= i__90 && i__90 <= k;VCTArray.loc(getVCTOption1(list),i__90).Integer__item <= sys__result)
[binder] (\forall int i__91;k <= i__91 && i__91 < VCTArray.alen(getVCTOption1(list));sys__result <= VCTArray.loc(getVCTOption1(list),i__91).Integer__item)
[binder] (\forall* int i__92;0 <= i__92 && i__92 < VCTArray.alen(getVCTOption1(list));Perm( VCTArray.loc(getVCTOption1(list),i__92).Integer__item , write ))
[binder] (\exists int i__93;0 <= i__93 && i__93 < VCTArray.alen(getVCTOption1(list));VCTArray.loc(getVCTOption1(list),i__93).Integer__item == sys__result)
[binder] (\forall int i__94;0 <= i__94 && i__94 <= k;VCTArray.loc(getVCTOption1(list),i__94).Integer__item <= sys__result)
[binder] (\forall int i__95;k <= i__95 && i__95 < VCTArray.alen(getVCTOption1(list));sys__result <= VCTArray.loc(getVCTOption1(list),i__95).Integer__item)
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(list));Perm( VCTArray.loc(getVCTOption1(list),i).Integer__item , write ))
[binder] (\exists int i;0 <= i && i < VCTArray.alen(getVCTOption1(list));VCTArray.loc(getVCTOption1(list),i).Integer__item == sys__result)
[binder] (\forall int i;0 <= i && i <= k;VCTArray.loc(getVCTOption1(list),i).Integer__item <= sys__result)
[binder] (\forall int i;k <= i && i < VCTArray.alen(getVCTOption1(list));sys__result <= VCTArray.loc(getVCTOption1(list),i).Integer__item)
[binder] (\forall* int i__96;0 <= i__96 && i__96 < VCTArray.alen(getVCTOption1(a)) && (i__96 < low || high < i__96);Perm( VCTArray.loc(getVCTOption1(a),i__96).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__97;low <= i__97 && i__97 <= high;Perm( VCTArray.loc(getVCTOption1(a),i__97).Integer__item , write ))
[binder] (\exists int i__98;low <= i__98 && i__98 <= high;VCTArray.loc(getVCTOption1(a),i__98).Integer__item == pivot)
[binder] (\forall* int i__99;0 <= i__99 && i__99 < VCTArray.alen(getVCTOption1(list));Perm( VCTArray.loc(getVCTOption1(list),i__99).Integer__item , write ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\exists int i__1;true;false)
[binder] (\exists int i;true;false)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\exists int i__1;true;false)
[binder] (\exists int i;true;false)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall int i__1,int j__2;0 <= i__1 && i__1 < 0 && (0 <= j__2 && j__2 < 5);VCTArray.loc(getVCTOption1(ar),i__1 * 4 + j__2).Integer__item == \old( VCTArray.loc(getVCTOption1(ar),i__1 * 4 + j__2).Integer__item ))
[binder] (\forall int i,int j;0 <= i && i < 0 && (0 <= j && j < 5);VCTArray.loc(getVCTOption1(ar),i * 4 + j).Integer__item == \old( VCTArray.loc(getVCTOption1(ar),i * 4 + j).Integer__item ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1,int j__2,int k__3;0 <= i__1 && i__1 < - 1 && (0 <= j__2 && j__2 < - 1) && (j__2 * - 1 + i__1 <= k__3 && k__3 < - 1 * - 1 + (j__2 * - 1 + i__1) && (k__3 - (j__2 * - 1 + i__1)) % (- 1 * - 1) == 0);Perm( VCTArray.loc(getVCTOption1(ar),k__3).Integer__item , 1 ))
[binder] (\forall* int i,int j,int k;0 <= i && i < - 1 && (0 <= j && j < - 1) && (j * - 1 + i <= k && k < - 1 * - 1 + (j * - 1 + i) && (k - (j * - 1 + i)) % (- 1 * - 1) == 0);Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Refute() ? TYPE<>.instanceof(TYPE<>.class_Refute(),t) : ! TYPE<>.instanceof(TYPE<>.class_Refute(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Refute() ? TYPE<>.instanceof(TYPE<>.class_Refute(),t) : ! TYPE<>.instanceof(TYPE<>.class_Refute(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Refute() ? TYPE<>.instanceof(TYPE<>.class_Refute(),t) : ! TYPE<>.instanceof(TYPE<>.class_Refute(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Refute() ? TYPE<>.instanceof(TYPE<>.class_Refute(),t) : ! TYPE<>.instanceof(TYPE<>.class_Refute(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Sat() ? TYPE<>.instanceof(TYPE<>.class_Sat(),t) : ! TYPE<>.instanceof(TYPE<>.class_Sat(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall int j0;0 <= j0 && j0 < i0;\result [ j0 ] == seq0 [ j0 ])
[binder] (\forall int j0;i0 <= j0 && j0 < | \result |;\result [ j0 ] == seq0 [ (j0 + 1) ])
[binder] (\forall int j0;0 <= j0 && j0 < i0;\result [ j0 ] == seq0 [ j0 ])
[binder] (\forall int j0;i0 <= j0 && j0 < | \result |;\result [ j0 ] == seq0 [ (j0 + 1) ])
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_List() ? TYPE<>.instanceof(TYPE<>.class_List(),t) : ! TYPE<>.instanceof(TYPE<>.class_List(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall int i__3;0 <= i__3 && i__3 < N;workers [ i__3 ] != null)
[binder] (\forall* int i__4;0 <= i__4 && i__4 < N;Perm( workers [ i__4 ].field_Worker_terminated , write ))
[binder] (\forall* int i__5;0 <= i__5 && i__5 < N;Perm( workers [ i__5 ].field_Worker_value , write ))
[binder] (\forall int i__6;0 <= i__6 && i__6 < N;! workers [ i__6 ].field_Worker_terminated)
[binder] (\forall int i__10;0 <= i__10 && i__10 < N;workers [ i__10 ] != null)
[binder] (\forall* int i__11;0 <= i__11 && i__11 < N;Perm( workers [ i__11 ].field_Worker_terminated , 1 \ 2 ))
[binder] (\forall* int i__12;0 <= i__12 && i__12 < N;Perm( workers [ i__12 ].field_Worker_value , 1 \ 2 ))
[binder] (\forall int i__13;0 <= i__13 && i__13 < N && workers [ i__13 ].field_Worker_terminated;diz.field_Test_values [ i__13 ] == workers [ i__13 ].field_Worker_value)
[binder] (\forall int i__14;0 <= i__14 && i__14 < N;workers [ i__14 ] != null)
[binder] (\forall* int i__15;0 <= i__15 && i__15 < N;Perm( workers [ i__15 ].field_Worker_terminated , 1 \ 2 ))
[binder] (\forall* int i__16;0 <= i__16 && i__16 < N;Perm( workers [ i__16 ].field_Worker_value , 1 \ 2 ))
[binder] (\forall int i__17;0 <= i__17 && i__17 < N && workers [ i__17 ].field_Worker_terminated;diz.field_Test_values [ i__17 ] == workers [ i__17 ].field_Worker_value)
[binder] (\forall* int tid;0 <= tid && tid < N;Perm( workers [ tid ].field_Worker_terminated , 1 \ 2 ))
[binder] (\forall* int tid;0 <= tid && tid < N;Perm( workers [ tid ].field_Worker_value , 1 \ 2 ))
[binder] (\forall int tid;0 <= tid && tid < N;! workers [ tid ].field_Worker_terminated)
[binder] (\forall* int tid;0 <= tid && tid < N;Perm( workers [ tid ].field_Worker_terminated , 1 \ 2 ))
[binder] (\forall* int tid;0 <= tid && tid < N;Perm( workers [ tid ].field_Worker_value , 1 \ 2 ))
[binder] (\forall int tid;0 <= tid && tid < N;workers [ tid ].field_Worker_terminated)
[binder] (\forall int tid;0 <= tid && tid < N;workers [ tid ].field_Worker_value == 0)
[binder] (\forall int i;0 <= i && i < N;workers [ i ] != null)
[binder] (\forall* int i;0 <= i && i < N;Perm( workers [ i ].field_Worker_terminated , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( workers [ i ].field_Worker_value , write ))
[binder] (\forall int i;0 <= i && i < N;! workers [ i ].field_Worker_terminated)
[binder] (\forall int i__18;0 <= i__18 && i__18 < N;workers [ i__18 ] != null)
[binder] (\forall* int i__19;0 <= i__19 && i__19 < N;Perm( workers [ i__19 ].field_Worker_terminated , 1 \ 2 ))
[binder] (\forall* int i__20;0 <= i__20 && i__20 < N;Perm( workers [ i__20 ].field_Worker_value , 1 \ 2 ))
[binder] (\forall int i__21;0 <= i__21 && i__21 < N && workers [ i__21 ].field_Worker_terminated;diz.field_Test_values [ i__21 ] == workers [ i__21 ].field_Worker_value)
[binder] (\forall int i__22;0 <= i__22 && i__22 < N;workers [ i__22 ] != null)
[binder] (\forall* int i__23;0 <= i__23 && i__23 < N;Perm( workers [ i__23 ].field_Worker_terminated , 1 \ 2 ))
[binder] (\forall* int i__24;0 <= i__24 && i__24 < N;Perm( workers [ i__24 ].field_Worker_value , 1 \ 2 ))
[binder] (\forall int i__25;0 <= i__25 && i__25 < N && workers [ i__25 ].field_Worker_terminated;diz.field_Test_values [ i__25 ] == workers [ i__25 ].field_Worker_value)
[binder] (\forall int i;0 <= i && i < N;workers [ i ] != null)
[binder] (\forall* int i;0 <= i && i < N;Perm( workers [ i ].field_Worker_terminated , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( workers [ i ].field_Worker_value , write ))
[binder] (\forall int i;0 <= i && i < N;workers [ i ].field_Worker_terminated)
[binder] (\forall int i;0 <= i && i < N;diz.field_Test_values [ i ] == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_separate_DOT_Main() ? TYPE<>.instanceof(TYPE<>.class_separate_DOT_Main(),t) : ! TYPE<>.instanceof(TYPE<>.class_separate_DOT_Main(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_separate_DOT_Util() ? TYPE<>.instanceof(TYPE<>.class_separate_DOT_Util(),t) : ! TYPE<>.instanceof(TYPE<>.class_separate_DOT_Util(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_separate_DOT_Util() ? TYPE<>.instanceof(TYPE<>.class_separate_DOT_Util(),t) : ! TYPE<>.instanceof(TYPE<>.class_separate_DOT_Util(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int i__3;0 <= i__3 && i__3 < | diz.field_Test_sequence |;Perm( diz.field_Test_sequence [ i__3 ].field_Element_value , write ))
[binder] (\forall* int i;0 <= i && i < | diz.field_Test_sequence |;Perm( diz.field_Test_sequence [ i ].field_Element_value , write ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_acquire())};true;Process<>.p_seq(p,Process<>.p_method_Future_acquire()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_acquire(),Process<>.p_empty())))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_release())};true;Process<>.p_seq(p,Process<>.p_method_Future_release()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_release(),Process<>.p_empty())))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_Locked())};true;Process<>.p_seq(p,Process<>.p_method_Future_Locked()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_Locked(),Process<>.p_empty())))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_Unlocked())};true;Process<>.p_seq(p,Process<>.p_method_Future_Unlocked()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_Unlocked(),Process<>.p_empty())))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == VCTFloat<>.zero())
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == 0)
[binder] (\forall seq<seq<T>> xs,int i,int j,VectorIndex<> cols{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs))};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j + 1),cols),MatrixExpression.mseq(xs)) == VectorExpression.vadd(MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs)),VectorExpression.vsum(cols,VectorExpression.vseq(xs [ i ]))))
[binder] (\forall int i,T t{VectorExpression.vget(VectorExpression.vrep(t),i)};true;VectorExpression.vget(VectorExpression.vrep(t),i) == t)
[binder] (\forall int i,int j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == i + j)
[binder] (\forall int i,seq<T> xs{VectorExpression.vget(VectorExpression.vseq(xs),i)};true;VectorExpression.vget(VectorExpression.vseq(xs),i) == xs [ i ])
[binder] (\forall int i,VectorExpression xs,VectorExpression ys{VectorExpression.vget(VectorExpression.vcmp(xs,ys),i)};true;VectorExpression.vget(VectorExpression.vcmp(xs,ys),i) == (VectorExpression.vget(xs,i) == VectorExpression.vget(ys,i) ? 1 : 0))
[binder] (\forall VCTFloat<> i,VCTFloat<> j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == VCTFloat<>.fadd(i,j))
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == VCTFloat<>.zero())
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == 0)
[binder] (\forall seq<T> xs;true;VectorExpression.vsize(VectorExpression.vseq(xs)) == | xs |)
[binder] (\forall T t;true;VectorExpression.vsize(VectorExpression.vrep(t)) == 1)
[binder] (\forall VectorExpression xs,int i,int j{VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs)};true;i >= 0 && j > i ==> VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs) == VectorExpression.vadd(VectorExpression.vsum(VectorIndex<>.vrange(i,j - 1),xs),VectorExpression.vget(xs,j - 1)))
[binder] (\forall VectorExpression xs,int i,int j{VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs)};true;i < 0 || (i >= j || j >= VectorExpression.vsize(xs)) ==> VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs) == 0)
[binder] (\forall VCTFloat<> f1,VCTFloat<> f2;true;VCTFloat<>.fadd(f1,f2) == VCTFloat<>.fadd(f2,f1))
[binder] (\forall VCTFloat<> f1;true;VCTFloat<>.fadd(f1,VCTFloat<>.zero()) == f1)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < M * N;Perm( VCTArray.loc(getVCTOption1(ar),i__1).Integer__item , 1 \ 2 ))
[binder] (\forall int t;0 <= t && t < N;0 <= t && t < N)
[binder] (\forall* int t;g * N <= t && t < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),t).Integer__item , 1 \ 4 ))
[binder] (\forall int t;0 <= t && t < N;0 <= t && t < N)
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int t;g * N <= t && t < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),t).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;0 <= k && k < M * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;0 <= k && k < M * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < M * N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < M * N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < M * N;Perm( VCTArray.loc(getVCTOption1(ar),i__1).Integer__item , 1 \ 2 ))
[binder] (\forall* int t;0 <= t && t < N;Perm( VCTArray.loc(getVCTOption1(contrib),t).Integer__item , write ))
[binder] (\forall* int t;0 <= t && t < N;Perm( VCTArray.loc(getVCTOption1(contrib),t).Integer__item , write ))
[binder] (\forall int t;0 <= t && t < N;VCTArray.loc(getVCTOption1(contrib),t).Integer__item == 0)
[binder] (\forall int t;0 <= t && t < N;0 <= t && t < N)
[binder] (\forall* int t;g * N <= t && t < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),t).Integer__item , 1 \ 4 ))
[binder] (\forall* int t;0 <= t && t < N;Perm( VCTArray.loc(getVCTOption1(contrib),t).Integer__item , 1 \ 2 ))
[binder] (\forall int t;0 <= t && t < N;VCTArray.loc(getVCTOption1(contrib),t).Integer__item == VCTArray.loc(getVCTOption1(ar),g * N + t).Integer__item)
[binder] (\forall int t;0 <= t && t < N;0 <= t && t < N)
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;0 <= k && k < N;Perm( VCTArray.loc(getVCTOption1(contrib),k).Integer__item , 1 \ 4 ))
[binder] (\forall int t,int k;0 <= t && t < N && t == 0 && (0 <= k && k < N);VCTArray.loc(getVCTOption1(contrib),k).Integer__item == VCTArray.loc(getVCTOption1(ar),g * N + k).Integer__item)
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;0 <= k && k < N;Perm( VCTArray.loc(getVCTOption1(contrib),k).Integer__item , 1 \ 4 ))
[binder] (\forall int k;0 <= k && k < N;VCTArray.loc(getVCTOption1(contrib),k).Integer__item == VCTArray.loc(getVCTOption1(ar),g * N + k).Integer__item)
[binder] (\forall* int k__19;0 <= k__19 && k__19 < N;Perm( VCTArray.loc(getVCTOption1(contrib),k__19).Integer__item , 1 \ 2 ))
[binder] (\forall* int k__20;0 <= k__20 && k__20 < N;Perm( VCTArray.loc(getVCTOption1(contrib),k__20).Integer__item , 1 \ 2 ))
[binder] (\forall* int k__22;0 <= k__22 && k__22 < N;Perm( VCTArray.loc(getVCTOption1(contrib),k__22).Integer__item , 1 \ 2 ))
[binder] (\forall* int k__23;0 <= k__23 && k__23 < N;Perm( VCTArray.loc(getVCTOption1(contrib),k__23).Integer__item , 1 \ 2 ))
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int t;0 <= t && t < N;Perm( VCTArray.loc(getVCTOption1(contrib),t).Integer__item , 1 \ 2 ))
[binder] (\forall int t;0 <= t && t < N;VCTArray.loc(getVCTOption1(contrib),t).Integer__item == 0)
[binder] (\forall* int t;g * N <= t && t < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),t).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k__28;0 <= k__28 && k__28 < N;Perm( VCTArray.loc(getVCTOption1(contrib__25),k__28).Integer__item , 1 \ 2 ))
[binder] (\forall* int k__29;0 <= k__29 && k__29 < N;Perm( VCTArray.loc(getVCTOption1(contrib__25),k__29).Integer__item , 1 \ 2 ))
[binder] (\forall* int k;g * N <= k && k < (g + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;0 <= k && k < M * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int k;0 <= k && k < M * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < M * N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < M * N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < M * N;VCTArray.loc(getVCTOption1(ar),i).Integer__item == \old( VCTArray.loc(getVCTOption1(ar),i).Integer__item ))
[binder] (\forall* int i0;0 <= i0 && i0 < size0;Perm( VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < size0;VCTArray.loc(getVCTOption1(sys__result),i0).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_TestCount() ? TYPE<>.instanceof(TYPE<>.class_TestCount(),t) : ! TYPE<>.instanceof(TYPE<>.class_TestCount(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(array));Perm( VCTArray.loc(getVCTOption1(array),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(array));VCTArray.loc(getVCTOption1(array),i).Integer__item == vals [ i ])
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(array));Perm( VCTArray.loc(getVCTOption1(array),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(array));VCTArray.loc(getVCTOption1(array),i).Integer__item == vals [ i ])
[binder] (\forall* int i__1;0 <= i__1 && i__1 < VCTArray.alen(getVCTOption1(array));Perm( VCTArray.loc(getVCTOption1(array),i__1).Integer__item , 1 \ 2 ))
[binder] (\forall int i__2;0 <= i__2 && i__2 < VCTArray.alen(getVCTOption1(array));VCTArray.loc(getVCTOption1(array),i__2).Integer__item == vals [ i__2 ])
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(array));Perm( VCTArray.loc(getVCTOption1(array),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(array));VCTArray.loc(getVCTOption1(array),i).Integer__item == vals [ i ])
[binder] (\forall* int i__7;0 <= i__7 && i__7 < VCTArray.alen(getVCTOption1(array));Perm( VCTArray.loc(getVCTOption1(array),i__7).Integer__item , 1 \ 2 ))
[binder] (\forall int i__8;0 <= i__8 && i__8 < VCTArray.alen(getVCTOption1(array));VCTArray.loc(getVCTOption1(array),i__8).Integer__item == vals [ i__8 ])
[binder] (\forall* int i__9;0 <= i__9 && i__9 < VCTArray.alen(getVCTOption1(array));Perm( VCTArray.loc(getVCTOption1(array),i__9).Integer__item , 1 \ 2 ))
[binder] (\forall int i__10;0 <= i__10 && i__10 < VCTArray.alen(getVCTOption1(array));VCTArray.loc(getVCTOption1(array),i__10).Integer__item == vals [ i__10 ])
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(array));Perm( VCTArray.loc(getVCTOption1(array),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(array));VCTArray.loc(getVCTOption1(array),i).Integer__item == vals [ i ])
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == VCTFloat<>.zero())
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == 0)
[binder] (\forall seq<seq<T>> xs,int i,int j,VectorIndex<> cols{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs))};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j + 1),cols),MatrixExpression.mseq(xs)) == VectorExpression.vadd(MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs)),VectorExpression.vsum(cols,VectorExpression.vseq(xs [ i ]))))
[binder] (\forall int i,T t{VectorExpression.vget(VectorExpression.vrep(t),i)};true;VectorExpression.vget(VectorExpression.vrep(t),i) == t)
[binder] (\forall int i,int j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == i + j)
[binder] (\forall int i,seq<T> xs{VectorExpression.vget(VectorExpression.vseq(xs),i)};true;VectorExpression.vget(VectorExpression.vseq(xs),i) == xs [ i ])
[binder] (\forall int i,VectorExpression xs,VectorExpression ys{VectorExpression.vget(VectorExpression.vcmp(xs,ys),i)};true;VectorExpression.vget(VectorExpression.vcmp(xs,ys),i) == (VectorExpression.vget(xs,i) == VectorExpression.vget(ys,i) ? 1 : 0))
[binder] (\forall VCTFloat<> i,VCTFloat<> j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == VCTFloat<>.fadd(i,j))
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == VCTFloat<>.zero())
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == 0)
[binder] (\forall seq<T> xs;true;VectorExpression.vsize(VectorExpression.vseq(xs)) == | xs |)
[binder] (\forall T t;true;VectorExpression.vsize(VectorExpression.vrep(t)) == 1)
[binder] (\forall VectorExpression xs,int i,int j{VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs)};true;i >= 0 && j > i ==> VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs) == VectorExpression.vadd(VectorExpression.vsum(VectorIndex<>.vrange(i,j - 1),xs),VectorExpression.vget(xs,j - 1)))
[binder] (\forall VectorExpression xs,int i,int j{VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs)};true;i < 0 || (i >= j || j >= VectorExpression.vsize(xs)) ==> VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs) == 0)
[binder] (\forall VCTFloat<> f1,VCTFloat<> f2;true;VCTFloat<>.fadd(f1,f2) == VCTFloat<>.fadd(f2,f1))
[binder] (\forall VCTFloat<> f1;true;VCTFloat<>.fadd(f1,VCTFloat<>.zero()) == f1)
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_step())};true;Process<>.p_seq(p,Process<>.p_method_Future_step()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_step(),Process<>.p_empty())))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_step())};true;Process<>.p_seq(p,Process<>.p_method_Future_step()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_step(),Process<>.p_empty())))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Testhist() ? TYPE<>.instanceof(TYPE<>.class_Testhist(),t) : ! TYPE<>.instanceof(TYPE<>.class_Testhist(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(hist));Perm( VCTArray.loc(getVCTOption1(hist),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));0 <= VCTArray.loc(getVCTOption1(a),i).Integer__item && VCTArray.loc(getVCTOption1(a),i).Integer__item < VCTArray.alen(getVCTOption1(hist)))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));VCTArray.loc(getVCTOption1(a),i).Integer__item == vals [ i ])
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(hist));Perm( VCTArray.loc(getVCTOption1(hist),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));0 <= VCTArray.loc(getVCTOption1(a),i).Integer__item && VCTArray.loc(getVCTOption1(a),i).Integer__item < VCTArray.alen(getVCTOption1(hist)))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));VCTArray.loc(getVCTOption1(a),i).Integer__item == vals [ i ])
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(hist));VCTArray.loc(getVCTOption1(hist),i).Integer__item == VectorExpression.vsum(VectorIndex<>.vrange(0,VCTArray.alen(getVCTOption1(a))),VectorExpression.vcmp(VectorExpression.vseq(vals),VectorExpression.vrep(i))))
[binder] (\forall* int i__1;0 <= i__1 && i__1 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i__1).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__2;0 <= i__2 && i__2 < VCTArray.alen(getVCTOption1(hist));Perm( VCTArray.loc(getVCTOption1(hist),i__2).Integer__item , 1 ))
[binder] (\forall int i__3;0 <= i__3 && i__3 < VCTArray.alen(getVCTOption1(a));0 <= VCTArray.loc(getVCTOption1(a),i__3).Integer__item && VCTArray.loc(getVCTOption1(a),i__3).Integer__item < VCTArray.alen(getVCTOption1(hist)))
[binder] (\forall int i__4;0 <= i__4 && i__4 < VCTArray.alen(getVCTOption1(a));VCTArray.loc(getVCTOption1(a),i__4).Integer__item == vals [ i__4 ])
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(hist));Perm( VCTArray.loc(getVCTOption1(hist),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));0 <= VCTArray.loc(getVCTOption1(a),i).Integer__item && VCTArray.loc(getVCTOption1(a),i).Integer__item < VCTArray.alen(getVCTOption1(hist)))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));VCTArray.loc(getVCTOption1(a),i).Integer__item == vals [ i ])
[binder] (\forall* int i__14;0 <= i__14 && i__14 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i__14).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__15;0 <= i__15 && i__15 < VCTArray.alen(getVCTOption1(hist));Perm( VCTArray.loc(getVCTOption1(hist),i__15).Integer__item , 1 ))
[binder] (\forall int i__16;0 <= i__16 && i__16 < VCTArray.alen(getVCTOption1(a));0 <= VCTArray.loc(getVCTOption1(a),i__16).Integer__item && VCTArray.loc(getVCTOption1(a),i__16).Integer__item < VCTArray.alen(getVCTOption1(hist)))
[binder] (\forall int i__17;0 <= i__17 && i__17 < VCTArray.alen(getVCTOption1(a));VCTArray.loc(getVCTOption1(a),i__17).Integer__item == vals [ i__17 ])
[binder] (\forall int i__18;0 <= i__18 && i__18 < k__5;VCTArray.loc(getVCTOption1(hist),i__18).Integer__item == VectorExpression.vsum(VectorIndex<>.vrange(0,0),VectorExpression.vcmp(VectorExpression.vseq(vals),VectorExpression.vrep(i__18))))
[binder] (\forall* int i__19;0 <= i__19 && i__19 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i__19).Integer__item , 1 \ 2 ))
[binder] (\forall* int i__20;0 <= i__20 && i__20 < VCTArray.alen(getVCTOption1(hist));Perm( VCTArray.loc(getVCTOption1(hist),i__20).Integer__item , 1 ))
[binder] (\forall int i__21;0 <= i__21 && i__21 < VCTArray.alen(getVCTOption1(a));0 <= VCTArray.loc(getVCTOption1(a),i__21).Integer__item && VCTArray.loc(getVCTOption1(a),i__21).Integer__item < VCTArray.alen(getVCTOption1(hist)))
[binder] (\forall int i__22;0 <= i__22 && i__22 < VCTArray.alen(getVCTOption1(a));VCTArray.loc(getVCTOption1(a),i__22).Integer__item == vals [ i__22 ])
[binder] (\forall int i__23;0 <= i__23 && i__23 < VCTArray.alen(getVCTOption1(hist));VCTArray.loc(getVCTOption1(hist),i__23).Integer__item == VectorExpression.vsum(VectorIndex<>.vrange(0,k__5),VectorExpression.vcmp(VectorExpression.vseq(vals),VectorExpression.vrep(i__23))))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(hist));Perm( VCTArray.loc(getVCTOption1(hist),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));0 <= VCTArray.loc(getVCTOption1(a),i).Integer__item && VCTArray.loc(getVCTOption1(a),i).Integer__item < VCTArray.alen(getVCTOption1(hist)))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));VCTArray.loc(getVCTOption1(a),i).Integer__item == vals [ i ])
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(hist));VCTArray.loc(getVCTOption1(hist),i).Integer__item == VectorExpression.vsum(VectorIndex<>.vrange(0,VCTArray.alen(getVCTOption1(a))),VectorExpression.vcmp(VectorExpression.vseq(vals),VectorExpression.vrep(i))))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == VCTFloat<>.zero())
[binder] (\forall int i,VectorIndex<> cols,MatrixExpression xs{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs)};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,i),cols),xs) == 0)
[binder] (\forall seq<seq<T>> xs,int i,int j,VectorIndex<> cols{MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs))};true;MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j + 1),cols),MatrixExpression.mseq(xs)) == VectorExpression.vadd(MatrixExpression.msum(MatrixIndex<>.product(VectorIndex<>.vrange(i,j),cols),MatrixExpression.mseq(xs)),VectorExpression.vsum(cols,VectorExpression.vseq(xs [ i ]))))
[binder] (\forall int i,T t{VectorExpression.vget(VectorExpression.vrep(t),i)};true;VectorExpression.vget(VectorExpression.vrep(t),i) == t)
[binder] (\forall int i,int j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == i + j)
[binder] (\forall int i,seq<T> xs{VectorExpression.vget(VectorExpression.vseq(xs),i)};true;VectorExpression.vget(VectorExpression.vseq(xs),i) == xs [ i ])
[binder] (\forall int i,VectorExpression xs,VectorExpression ys{VectorExpression.vget(VectorExpression.vcmp(xs,ys),i)};true;VectorExpression.vget(VectorExpression.vcmp(xs,ys),i) == (VectorExpression.vget(xs,i) == VectorExpression.vget(ys,i) ? 1 : 0))
[binder] (\forall VCTFloat<> i,VCTFloat<> j{VectorExpression.vadd(i,j)};true;VectorExpression.vadd(i,j) == VCTFloat<>.fadd(i,j))
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == VCTFloat<>.zero())
[binder] (\forall VectorExpression xs,int i{VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs)};true;VectorExpression.vsum(VectorIndex<>.vrange(i,i),xs) == 0)
[binder] (\forall seq<T> xs;true;VectorExpression.vsize(VectorExpression.vseq(xs)) == | xs |)
[binder] (\forall T t;true;VectorExpression.vsize(VectorExpression.vrep(t)) == 1)
[binder] (\forall VectorExpression xs,int i,int j{VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs)};true;i >= 0 && j > i ==> VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs) == VectorExpression.vadd(VectorExpression.vsum(VectorIndex<>.vrange(i,j - 1),xs),VectorExpression.vget(xs,j - 1)))
[binder] (\forall VectorExpression xs,int i,int j{VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs)};true;i < 0 || (i >= j || j >= VectorExpression.vsize(xs)) ==> VectorExpression.vsum(VectorIndex<>.vrange(i,j),xs) == 0)
[binder] (\forall VCTFloat<> f1,VCTFloat<> f2;true;VCTFloat<>.fadd(f1,f2) == VCTFloat<>.fadd(f2,f1))
[binder] (\forall VCTFloat<> f1;true;VCTFloat<>.fadd(f1,VCTFloat<>.zero()) == f1)
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_History_step())};true;Process<>.p_seq(p,Process<>.p_method_History_step()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_History_step(),Process<>.p_empty())))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_C() ? TYPE<>.instanceof(TYPE<>.class_C(),t) : ! TYPE<>.instanceof(TYPE<>.class_C(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Test() ? TYPE<>.instanceof(TYPE<>.class_Test(),t) : ! TYPE<>.instanceof(TYPE<>.class_Test(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Test() ? TYPE<>.instanceof(TYPE<>.class_Test(),t) : ! TYPE<>.instanceof(TYPE<>.class_Test(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall* int i1__1,int j1__2;0 <= i1__1 && i1__1 < M && (0 <= j1__2 && j1__2 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(out),i1__1),j1__2).Integer__item , write ))
[binder] (\forall* int i1__3,int j1__4;0 <= i1__3 && i1__3 < N && (0 <= j1__4 && j1__4 < M);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(inp),i1__3),j1__4).Integer__item , 1 \ 2 ))
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(out),i),j).Integer__item , write ))
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(inp),j),i).Integer__item , 1 \ 4 ))
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(out),i),j).Integer__item , write ))
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(inp),j),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i,int j;0 <= i && i < M && (0 <= j && j < N);VCTArray.loc(VCTArray.loc(getVCTOption1(out),i),j).Integer__item == VCTArray.loc(VCTArray.loc(getVCTOption1(inp),j),i).Integer__item)
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(out),i1),j1).Integer__item , write ))
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < N && (0 <= j1 && j1 < M);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(inp),i1),j1).Integer__item , 1 \ 2 ))
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(out),i1),j1).Integer__item , write ))
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < N && (0 <= j1 && j1 < M);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(inp),i1),j1).Integer__item , 1 \ 2 ))
[binder] (\forall int i,int j;0 <= i && i < M && (0 <= j && j < N);VCTArray.loc(VCTArray.loc(getVCTOption1(out),i),j).Integer__item == VCTArray.loc(VCTArray.loc(getVCTOption1(inp),j),i).Integer__item)
[binder] (\forall int i,int j;0 <= i && i < M && (0 <= j && j < N);VCTArray.loc(VCTArray.loc(getVCTOption1(inp),j),i).Integer__item == \old( VCTArray.loc(VCTArray.loc(getVCTOption1(inp),j),i).Integer__item ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Tree() ? TYPE<>.instanceof(TYPE<>.class_Tree(),t) : ! TYPE<>.instanceof(TYPE<>.class_Tree(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Tree() ? TYPE<>.instanceof(TYPE<>.class_Tree(),t) : ! TYPE<>.instanceof(TYPE<>.class_Tree(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_MagicWands() ? TYPE<>.instanceof(TYPE<>.class_MagicWands(),t) : ! TYPE<>.instanceof(TYPE<>.class_MagicWands(),t))
[binder] (\forall int i;1 < i && i < | s |;s [ (i - 1) ] <= s [ i ])
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_Tree() ? TYPE<>.instanceof(TYPE<>.class_Tree(),t) : ! TYPE<>.instanceof(TYPE<>.class_Tree(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_MagicWands() ? TYPE<>.instanceof(TYPE<>.class_MagicWands(),t) : ! TYPE<>.instanceof(TYPE<>.class_MagicWands(),t))
[binder] (\forall int i;1 < i && i < | s |;s [ (i - 1) ] <= s [ i ])
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_C() ? TYPE<>.instanceof(TYPE<>.class_C(),t) : ! TYPE<>.instanceof(TYPE<>.class_C(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p,int n{Process<>.p_seq(p,Process<>.p_method_Future_plus__Integer(n))};true;Process<>.p_seq(p,Process<>.p_method_Future_plus__Integer(n)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_plus__Integer(n),Process<>.p_empty())))
[binder] (\forall Process<> p,int n{Process<>.p_seq(p,Process<>.p_method_Future_mult__Integer(n))};true;Process<>.p_seq(p,Process<>.p_method_Future_mult__Integer(n)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_mult__Integer(n),Process<>.p_empty())))
[binder] (\forall int n{Process<>.p_method_Future_parcount__Integer(n)};true;Process<>.p_merge(Process<>.p_method_Future_plus__Integer(n),Process<>.p_method_Future_mult__Integer(n)) == Process<>.p_method_Future_parcount__Integer(n))
[binder] (\forall Process<> p,int n{Process<>.p_seq(p,Process<>.p_method_Future_parcount__Integer(n))};true;Process<>.p_seq(p,Process<>.p_method_Future_parcount__Integer(n)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_parcount__Integer(n),Process<>.p_empty())))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_WandDemo() ? TYPE<>.instanceof(TYPE<>.class_WandDemo(),t) : ! TYPE<>.instanceof(TYPE<>.class_WandDemo(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_MagicWands() ? TYPE<>.instanceof(TYPE<>.class_MagicWands(),t) : ! TYPE<>.instanceof(TYPE<>.class_MagicWands(),t))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_ZeroArray() ? TYPE<>.instanceof(TYPE<>.class_ZeroArray(),t) : ! TYPE<>.instanceof(TYPE<>.class_ZeroArray(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i_fresh_rw_0).Integer__item , 1 ))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i_fresh_rw_0).Integer__item , 1 ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int i_fresh_rw_0__1;0 <= i_fresh_rw_0__1 && i_fresh_rw_0__1 < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i_fresh_rw_0__1).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , 1 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , 1 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i_fresh_rw_0).Integer__item , 1 ))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(ar));Perm( VCTArray.loc(getVCTOption1(ar),i_fresh_rw_0).Integer__item , 1 ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(ar));VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int k__1;0 <= k__1 && k__1 < VCTArray.alen(getVCTOption1(x));Perm( VCTArray.loc(getVCTOption1(x),k__1).Integer__item , write ))
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(x));Perm( VCTArray.loc(getVCTOption1(x),k).Integer__item , write ))
[binder] (\forall* int k__5;0 <= k__5 && k__5 < VCTArray.alen(getVCTOption1(x));Perm( VCTArray.loc(getVCTOption1(x),k__5).Integer__item , write ))
[binder] (\forall int k__6;0 <= k__6 && k__6 < i__2;VCTArray.loc(getVCTOption1(x),k__6).Integer__item == 0)
[binder] (\forall* int k;0 <= k && k < VCTArray.alen(getVCTOption1(x));Perm( VCTArray.loc(getVCTOption1(x),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < VCTArray.alen(getVCTOption1(x));VCTArray.loc(getVCTOption1(x),k).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < tcount;Perm( VCTArray.loc(getVCTOption1(x),i__1).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(x),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(x),tid).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(x),tid).Integer__item == 0)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(x),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(x),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < tcount;VCTArray.loc(getVCTOption1(x),i).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(ar),__i__1).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(ar),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(ar),__i).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < N;Perm( VCTArray.loc(getVCTOption1(ar),i__1).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall int i0__5;0 <= i0__5 && i0__5 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0__5)) == N)
[binder] (\forall* int i0__6,int i1__7,int j0__8,int j1__9{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0__6),i1__7),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0__8),j1__9)};0 <= i0__6 && i0__6 < M && (0 <= i1__7 && i1__7 < N) && (0 <= j0__8 && j0__8 < M) && (0 <= j1__9 && j1__9 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0__6),i1__7) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0__8),j1__9);i0__6 == j0__8 && i1__7 == j1__9)
[binder] (\forall* int i__10;0 <= i__10 && i__10 < N;Perm( VCTArray.loc(getVCTOption1(ar),i__10).Integer__item , write ))
[binder] (\forall* int i1__11,int j1__12;0 <= i1__11 && i1__11 < M && (0 <= j1__12 && j1__12 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i1__11),j1__12).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i),j).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i),j).Integer__item , write ))
[binder] (\forall int i,int j;0 <= i && i < M && (0 <= j && j < N);VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i),j).Integer__item == 0)
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i1),j1).Integer__item , write ))
[binder] (\forall int i0;0 <= i0 && i0 < M;VCTArray.alen(VCTArray.loc(getVCTOption2(matrix),i0)) == N)
[binder] (\forall* int i0,int i1,int j0,int j1{VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1),VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1)};0 <= i0 && i0 < M && (0 <= i1 && i1 < N) && (0 <= j0 && j0 < M) && (0 <= j1 && j1 < N) && VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i0),i1) == VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),j0),j1);i0 == j0 && i1 == j1)
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i1),j1).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < N;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall int i3,int j3;0 <= i3 && i3 < M && (0 <= j3 && j3 < N);VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i3),j3).Integer__item == 0)
[binder] (\forall* int i__20;0 <= i__20 && i__20 < M * N;Perm( VCTArray.loc(getVCTOption1(ar),i__20).Integer__item , write ))
[binder] (\forall* int j;i * N <= j && j < (i + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),j).Integer__item , write ))
[binder] (\forall* int j;i * N <= j && j < (i + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),j).Integer__item , write ))
[binder] (\forall int j;i * N <= j && j < (i + 1) * N;VCTArray.loc(getVCTOption1(ar),j).Integer__item == 0)
[binder] (\forall* int k;i * N <= k && k < (i + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall* int k;i * N <= k && k < (i + 1) * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall int k;i * N <= k && k < (i + 1) * N;VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int k;0 <= k && k < M * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall* int k;0 <= k && k < M * N;Perm( VCTArray.loc(getVCTOption1(ar),k).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < M * N;VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int i;0 <= i && i < M * N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < M * N;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < M * N;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall* int i1__24,int j1__25;0 <= i1__24 && i1__24 < M && (0 <= j1__25 && j1__25 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i1__24),j1__25).Integer__item , write ))
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i),j).Integer__item , write ))
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i),j).Integer__item , write ))
[binder] (\forall int i,int j;0 <= i && i < M && (0 <= j && j < N);VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i),j).Integer__item == 0)
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i1),j1).Integer__item , write ))
[binder] (\forall* int i1,int j1;0 <= i1 && i1 < M && (0 <= j1 && j1 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i1),j1).Integer__item , write ))
[binder] (\forall int i3,int j3;0 <= i3 && i3 < M && (0 <= j3 && j3 < N);VCTArray.loc(VCTArray.loc(getVCTOption2(matrix),i3),j3).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < M;Perm( VCTArray.loc(getVCTOption1(matrix),__i__1).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(matrix),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < M;Perm( VCTArray.loc(getVCTOption1(matrix),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < M;VCTArray.loc(getVCTOption1(matrix),i).Integer__item == 0)
[binder] (\forall* int __i;0 <= __i && __i < M;Perm( VCTArray.loc(getVCTOption1(matrix),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < M;Perm( VCTArray.loc(getVCTOption1(matrix),__i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < M;VCTArray.loc(getVCTOption1(matrix),i).Integer__item == 0)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < M;Perm( VCTArray.loc(getVCTOption1(matrix),__i__1).VCTArray_Ref___item , write ))
[binder] (\forall* int i__2,int j__3;0 <= i__2 && i__2 < M && (0 <= j__3 && j__3 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i__2).VCTArray_Ref___item,j__3).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < M;Perm( VCTArray.loc(getVCTOption1(matrix),__i).VCTArray_Ref___item , write ))
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i).VCTArray_Ref___item,j).Integer__item , write ))
[binder] (\forall* int __i__10;0 <= __i__10 && __i__10 < M;Perm( VCTArray.loc(getVCTOption1(matrix),__i__10).VCTArray_Ref___item , write ))
[binder] (\forall* int i__11,int j__12;0 <= i__11 && i__11 < M && (0 <= j__12 && j__12 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i__11).VCTArray_Ref___item,j__12).Integer__item , write ))
[binder] (\forall int i2__13,int j__14;0 <= i2__13 && i2__13 < i__4 && (0 <= j__14 && j__14 < N);VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i2__13).VCTArray_Ref___item,j__14).Integer__item == 0)
[binder] (\forall* int __i__16;0 <= __i__16 && __i__16 < M;Perm( VCTArray.loc(getVCTOption1(matrix),__i__16).VCTArray_Ref___item , write ))
[binder] (\forall* int i__17,int j__18;0 <= i__17 && i__17 < M && (0 <= j__18 && j__18 < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i__17).VCTArray_Ref___item,j__18).Integer__item , write ))
[binder] (\forall int j2__19;0 <= j2__19 && j2__19 < j__15;VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i__4).VCTArray_Ref___item,j2__19).Integer__item == 0)
[binder] (\forall int i2__20,int j__21;0 <= i2__20 && i2__20 < i__4 && (0 <= j__21 && j__21 < N);VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i2__20).VCTArray_Ref___item,j__21).Integer__item == 0)
[binder] (\forall* int __i;0 <= __i && __i < M;Perm( VCTArray.loc(getVCTOption1(matrix),__i).VCTArray_Ref___item , write ))
[binder] (\forall* int i,int j;0 <= i && i < M && (0 <= j && j < N);Perm( VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i).VCTArray_Ref___item,j).Integer__item , write ))
[binder] (\forall int i,int j;0 <= i && i < M && (0 <= j && j < N);VCTArray.loc(VCTArray.loc(getVCTOption1(matrix),i).VCTArray_Ref___item,j).Integer__item == 0)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__1).Integer__item , write ))
[binder] (\forall* int __i__2;0 <= __i__2 && __i__2 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__2).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__3;0 <= __i__3 && __i__3 < len;Perm( VCTArray.loc(getVCTOption1(c),__i__3).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;1 <= i && i < (len - 1 < len ? len - 1 : len) + 1;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(ar),__i__1).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(ar),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(ar),i).Integer__item == 0)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(ar),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(ar),__i).Integer__item , write ))
[binder] (\forall int k;0 <= k && k < len;VCTArray.loc(getVCTOption1(ar),k).Integer__item == 0)
[binder] (\forall* int __i__4;0 <= __i__4 && __i__4 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__4).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == \old( VCTArray.loc(getVCTOption1(a),i).Integer__item ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == \old( VCTArray.loc(getVCTOption1(a),i).Integer__item ))
[binder] (\forall* int __i__10;0 <= __i__10 && __i__10 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__10).Integer__item , write ))
[binder] (\forall* int __i__11;0 <= __i__11 && __i__11 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__11).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__12;0 <= __i__12 && __i__12 < len;Perm( VCTArray.loc(getVCTOption1(c),__i__12).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == \old( VCTArray.loc(getVCTOption1(b),i).Integer__item ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == \old( VCTArray.loc(getVCTOption1(c),i).Integer__item ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == VCTArray.loc(getVCTOption1(b),i).Integer__item + VCTArray.loc(getVCTOption1(c),i).Integer__item)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == VCTArray.loc(getVCTOption1(b),i).Integer__item + VCTArray.loc(getVCTOption1(c),i).Integer__item)
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == \old( VCTArray.loc(getVCTOption1(b),i).Integer__item ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == \old( VCTArray.loc(getVCTOption1(c),i).Integer__item ))
[binder] (\forall* int __i__20;0 <= __i__20 && __i__20 < N;Perm( VCTArray.loc(getVCTOption1(a),__i__20).Integer__item , write ))
[binder] (\forall* int __i__21;0 <= __i__21 && __i__21 < N;Perm( VCTArray.loc(getVCTOption1(b),__i__21).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__22;0 <= __i__22 && __i__22 < N;Perm( VCTArray.loc(getVCTOption1(c),__i__22).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i__33;0 <= __i__33 && __i__33 < N;Perm( VCTArray.loc(getVCTOption1(a),__i__33).Integer__item , write ))
[binder] (\forall* int __i__34;0 <= __i__34 && __i__34 < N;Perm( VCTArray.loc(getVCTOption1(b),__i__34).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__35;0 <= __i__35 && __i__35 < N;Perm( VCTArray.loc(getVCTOption1(c),__i__35).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < N && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(a),k_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i__46;0 <= __i__46 && __i__46 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__46).Integer__item , write ))
[binder] (\forall* int __i__47;0 <= __i__47 && __i__47 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__47).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__48;0 <= __i__48 && __i__48 < len;Perm( VCTArray.loc(getVCTOption1(c),__i__48).Integer__item , write ))
[binder] (\forall int i__49;0 <= i__49 && i__49 < len;VCTArray.loc(getVCTOption1(b),i__49).Integer__item == i__49)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < len && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(a),k_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1 && VCTArray.loc(getVCTOption1(b),i).Integer__item == i && (0 < i ==> VCTArray.loc(getVCTOption1(c),i).Integer__item == i + 2))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall int i;0 < i && i < len;VCTArray.loc(getVCTOption1(c),i).Integer__item == i + 2)
[binder] (\forall* int __i__60;0 <= __i__60 && __i__60 < N;Perm( VCTArray.loc(getVCTOption1(a),__i__60).Integer__item , write ))
[binder] (\forall* int __i__61;0 <= __i__61 && __i__61 < N;Perm( VCTArray.loc(getVCTOption1(b),__i__61).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__62;0 <= __i__62 && __i__62 < N;Perm( VCTArray.loc(getVCTOption1(c),__i__62).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;1 <= i && i < (N - 1 < N ? N - 1 : N) + 1;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < N;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < N;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i__73;0 <= __i__73 && __i__73 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__73).Integer__item , write ))
[binder] (\forall* int __i__74;0 <= __i__74 && __i__74 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__74).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__75;0 <= __i__75 && __i__75 < len;Perm( VCTArray.loc(getVCTOption1(c),__i__75).Integer__item , write ))
[binder] (\forall int tid__76;0 <= tid__76 && tid__76 < len;VCTArray.loc(getVCTOption1(a),tid__76).Integer__item == 0)
[binder] (\forall int tid__77;0 <= tid__77 && tid__77 < len;VCTArray.loc(getVCTOption1(b),tid__77).Integer__item == tid__77)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;1 <= i && i < (len - 1 < len ? len - 1 : len) + 1;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < (len - 1 < len ? len - 1 : len);VCTArray.loc(getVCTOption1(a),i + 1).Integer__item == 0)
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall int i;0 <= i && i < (len - 1 < len ? len - 1 : len);VCTArray.loc(getVCTOption1(c),i).Integer__item == 2)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < len;VCTArray.loc(getVCTOption1(a),tid).Integer__item == 0)
[binder] (\forall int tid;0 <= tid && tid < len;VCTArray.loc(getVCTOption1(b),tid).Integer__item == tid)
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall int i;0 <= i && i < len;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall int i;0 <= i && i < len - 1;VCTArray.loc(getVCTOption1(c),i).Integer__item == 2)
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall* int j__1;0 <= j__1 && j__1 < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),j__1).Integer__item , write ))
[binder] (\forall* int j;0 <= j && j < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),j).Integer__item , write ))
[binder] (\forall* int j__5;0 <= j__5 && j__5 < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),j__5).Integer__item , write ))
[binder] (\forall int j__6;0 <= j__6 && j__6 < i__2;VCTArray.loc(getVCTOption1(A),j__6).Integer__item == 0)
[binder] (\forall* int j;0 <= j && j < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),j).Integer__item , write ))
[binder] (\forall int j;0 <= j && j < VCTArray.alen(getVCTOption1(A));VCTArray.loc(getVCTOption1(A),j).Integer__item == 0)
[binder] (\forall* int j__7;0 <= j__7 && j__7 < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),j__7).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));VCTArray.loc(getVCTOption1(A),tid).Integer__item == 0)
[binder] (\forall* int j;0 <= j && j < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),j).Integer__item , write ))
[binder] (\forall* int j;0 <= j && j < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),j).Integer__item , write ))
[binder] (\forall int j;0 <= j && j < VCTArray.alen(getVCTOption1(A));VCTArray.loc(getVCTOption1(A),j).Integer__item == 0)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i__1).Integer__item , 1 \ 2 ))
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , 1 \ 2 ))
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i).Integer__item , 1 \ 2 ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall int i;0 <= i && i < | \result |;\result [ i ] == 0)
[binder] (\forall int i;0 <= i && i < | \result | && i != j;\result [ i ] == xs [ i ])
[binder] (\forall* int i__1;0 <= i__1 && i__1 < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i__1).Integer__item , 1 \ 2 ))
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , 1 \ 2 ))
[binder] (\forall int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));contrib [ tid ] == 0)
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , 1 \ 2 ))
[binder] (\forall int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));contrib [ tid ] == VCTArray.loc(getVCTOption1(A),tid).Integer__item)
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < | contrib |;contrib [ i ] == VCTArray.loc(getVCTOption1(A),i).Integer__item)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__3;0 <= i__3 && i__3 < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i__3).Integer__item , 1 \ 2 ))
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , 1 \ 2 ))
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i).Integer__item , 1 \ 2 ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p,int v{Process<>.p_seq(p,Process<>.p_method_Future_incr__Integer(v))};true;Process<>.p_seq(p,Process<>.p_method_Future_incr__Integer(v)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_incr__Integer(v),Process<>.p_empty())))
[binder] (\forall int v{Process<>.p_method_Future_done__Integer(v)};true;Process<>.p_empty() == Process<>.p_method_Future_done__Integer(v))
[binder] (\forall Process<> p,int v{Process<>.p_seq(p,Process<>.p_method_Future_done__Integer(v))};true;Process<>.p_seq(p,Process<>.p_method_Future_done__Integer(v)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_done__Integer(v),Process<>.p_empty())))
[binder] (\forall seq<int> xs{Process<>.p_method_Future_P__Sequence$Integer$(xs)};true;(0 < | xs | ? Process<>.p_merge(Process<>.p_seq(Process<>.p_method_Future_incr__Integer(xs [ 0 ]),Process<>.p_method_Future_done__Integer(xs [ 0 ])),Process<>.p_method_Future_P__Sequence$Integer$(tail( xs ))) : Process<>.p_empty()) == Process<>.p_method_Future_P__Sequence$Integer$(xs))
[binder] (\forall Process<> p,seq<int> xs{Process<>.p_seq(p,Process<>.p_method_Future_P__Sequence$Integer$(xs))};true;Process<>.p_seq(p,Process<>.p_method_Future_P__Sequence$Integer$(xs)) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_P__Sequence$Integer$(xs),Process<>.p_empty())))
[binder] (\forall* int i;0 <= i && i < | xs |;[ write ] hist_idle(model,new_frac(1 \ | xs |),Process<>.p_seq(Process<>.p_method_Future_incr__Integer(xs [ i ]),Process<>.p_method_Future_done__Integer(xs [ i ]))))
[binder] (\forall* int i;0 <= i && i < | xs |;[ write ] hist_idle(model,new_frac(1 \ | xs |),Process<>.p_method_Future_done__Integer(xs [ i ])))
[binder] (\forall* int i__2;0 <= i__2 && i__2 < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i__2).Integer__item , 1 \ 2 ))
[binder] (\forall int i__3;0 <= i__3 && i__3 < VCTArray.alen(getVCTOption1(A));VCTArray.loc(getVCTOption1(A),i__3).Integer__item == xs [ i__3 ])
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));VCTArray.loc(getVCTOption1(A),tid).Integer__item == xs [ tid ])
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));[ write ] hist_idle(model,new_frac(1 \ | xs |),Process<>.p_seq(Process<>.p_method_Future_incr__Integer(VCTArray.loc(getVCTOption1(A),tid).Integer__item),Process<>.p_method_Future_done__Integer(VCTArray.loc(getVCTOption1(A),tid).Integer__item))))
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));VCTArray.loc(getVCTOption1(A),tid).Integer__item == xs [ tid ])
[binder] (\forall* int tid;0 <= tid && tid < VCTArray.alen(getVCTOption1(A));[ write ] hist_idle(model,new_frac(1 \ | xs |),Process<>.p_method_Future_done__Integer(VCTArray.loc(getVCTOption1(A),tid).Integer__item)))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));VCTArray.loc(getVCTOption1(A),i).Integer__item == xs [ i ])
[binder] (\forall* int i__19;0 <= i__19 && i__19 < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i__19).Integer__item , 1 \ 2 ))
[binder] (\forall int i__20;0 <= i__20 && i__20 < VCTArray.alen(getVCTOption1(A));VCTArray.loc(getVCTOption1(A),i__20).Integer__item == xs [ i__20 ])
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));Perm( VCTArray.loc(getVCTOption1(A),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < VCTArray.alen(getVCTOption1(A));VCTArray.loc(getVCTOption1(A),i).Integer__item == xs [ i ])
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall Process<> p;true;Process<>.p_merge(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(Process<>.p_empty(),p) == p)
[binder] (\forall Process<> p;true;Process<>.p_seq(p,Process<>.p_empty()) == p)
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p1))
[binder] (\forall Process<> p1,Process<> p2;true;Process<>.p_is_choice(Process<>.p_choice(p1,p2),p2))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3;true;Process<>.p_seq(Process<>.p_choice(p1,p2),p3) == Process<>.p_choice(Process<>.p_seq(p1,p3),Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p1,Process<> p2,Process<> p3{Process<>.p_seq(Process<>.p_seq(p1,p2),p3)};true;Process<>.p_seq(Process<>.p_seq(p1,p2),p3) == Process<>.p_seq(p1,Process<>.p_seq(p2,p3)))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_incr())};true;Process<>.p_seq(p,Process<>.p_method_Future_incr()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_incr(),Process<>.p_empty())))
[binder] (\forall Process<> p{Process<>.p_seq(p,Process<>.p_method_Future_OG())};true;Process<>.p_seq(p,Process<>.p_method_Future_OG()) == Process<>.p_seq(p,Process<>.p_seq(Process<>.p_method_Future_OG(),Process<>.p_empty())))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < tcount;Perm( VCTArray.loc(getVCTOption1(b),i__1).Integer__item , read ))
[binder] (\forall* int i__2;0 <= i__2 && i__2 < tcount;Perm( VCTArray.loc(getVCTOption1(c),i__2).Integer__item , write ))
[binder] (\forall* int i__3;0 <= i__3 && i__3 < tcount;Perm( VCTArray.loc(getVCTOption1(a),i__3).Integer__item , write ))
[binder] (\forall int i__4;0 <= i__4 && i__4 < tcount;VCTArray.loc(getVCTOption1(b),i__4).Integer__item == i__4)
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , read ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(a),tid).Integer__item == tid + 1)
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , read ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , 1 \ 2 ))
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < tcount && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(a),k_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(a),tid).Integer__item == \old( VCTArray.loc(getVCTOption1(a),tid).Integer__item ))
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(b),tid).Integer__item == \old( VCTArray.loc(getVCTOption1(b),tid).Integer__item ))
[binder] (\forall int tid;0 <= tid && tid < tcount && 0 < tid;VCTArray.loc(getVCTOption1(a),tid - 1).Integer__item == tid)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , read ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(b),tid).Integer__item == tid)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , read ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , 1 \ 2 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(b),tid).Integer__item == tid)
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(a),tid).Integer__item == tid + 1)
[binder] (\forall int tid;0 <= tid && tid < tcount && 0 < tid;VCTArray.loc(getVCTOption1(c),tid).Integer__item == tid + 2)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , read ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < tcount;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , read ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < tcount;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall int i;0 <= i && i < tcount;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall int i;1 <= i && i < tcount;VCTArray.loc(getVCTOption1(c),i).Integer__item == i + 2)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int __i__1;0 <= __i__1 && __i__1 < len;Perm( VCTArray.loc(getVCTOption1(a),__i__1).Integer__item , write ))
[binder] (\forall* int __i__2;0 <= __i__2 && __i__2 < len;Perm( VCTArray.loc(getVCTOption1(b),__i__2).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i__3;0 <= __i__3 && __i__3 < len;Perm( VCTArray.loc(getVCTOption1(c),__i__3).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < len && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(a),k_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 2 ))
[binder] (\forall* int i;0 <= i && i < len;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(a),__i).Integer__item , write ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(b),__i).Integer__item , 1 \ 2 ))
[binder] (\forall* int __i;0 <= __i && __i < len;Perm( VCTArray.loc(getVCTOption1(c),__i).Integer__item , write ))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(a,0)) + i)
[binder] (\forall VCTArray a,VCTArray b,int i,int j{VCTArray.loc(a,i),VCTArray.loc(b,j)};true;VCTArray.second(VCTArray.loc(a,i)) == VCTArray.second(VCTArray.loc(b,j)) ==> VCTArray.loc(a,i) == VCTArray.loc(b,j))
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < tcount;Perm( VCTArray.loc(getVCTOption1(b),i__1).Integer__item , read ))
[binder] (\forall* int i__2;0 <= i__2 && i__2 < tcount;Perm( VCTArray.loc(getVCTOption1(c),i__2).Integer__item , write ))
[binder] (\forall* int i__3;0 <= i__3 && i__3 < tcount;Perm( VCTArray.loc(getVCTOption1(a),i__3).Integer__item , write ))
[binder] (\forall int i__4;0 <= i__4 && i__4 < tcount;VCTArray.loc(getVCTOption1(b),i__4).Integer__item == i__4)
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int tid;0 <= tid && tid < (tcount - 1 < tcount ? tcount - 1 : tcount);Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , 1 \ 2 ))
[binder] (\forall int tid;0 <= tid && tid < (tcount - 1 < tcount ? tcount - 1 : tcount);VCTArray.loc(getVCTOption1(a),tid).Integer__item == tid + 1)
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < tcount && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(a),k_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall int tid;0 <= tid && tid < tcount && 0 < tid;VCTArray.loc(getVCTOption1(a),tid - 1).Integer__item == tid)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , read ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(b),tid).Integer__item == tid)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , read ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , 1 \ 2 ))
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < tcount && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(a),k_fresh_rw_0).Integer__item , 1 \ 2 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(b),tid).Integer__item == tid)
[binder] (\forall int tid;0 <= tid && tid < tcount;VCTArray.loc(getVCTOption1(a),tid).Integer__item == tid + 1)
[binder] (\forall int tid;0 <= tid && tid < tcount && 0 < tid;VCTArray.loc(getVCTOption1(c),tid).Integer__item == tid + 2)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , read ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall int i;0 <= i && i < tcount;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , read ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 2 ))
[binder] (\forall int i;0 <= i && i < tcount;VCTArray.loc(getVCTOption1(b),i).Integer__item == i)
[binder] (\forall int i;0 <= i && i < tcount;VCTArray.loc(getVCTOption1(a),i).Integer__item == i + 1)
[binder] (\forall int i;1 <= i && i < tcount;VCTArray.loc(getVCTOption1(c),i).Integer__item == i + 2)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_java_DOT_lang_DOT_Object() ? TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t) : ! TYPE<>.instanceof(TYPE<>.class_java_DOT_lang_DOT_Object(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_MyClass() ? TYPE<>.instanceof(TYPE<>.class_MyClass(),t) : ! TYPE<>.instanceof(TYPE<>.class_MyClass(),t))
[binder] (\forall TYPE<> t;true;t == TYPE<>.class_java_DOT_lang_DOT_Object() || t == TYPE<>.class_EncodedGlobalVariables() ? TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t) : ! TYPE<>.instanceof(TYPE<>.class_EncodedGlobalVariables(),t))
[binder] (\forall* int i__1;0 <= i__1 && i__1 < tcount;Perm( VCTArray.loc(getVCTOption1(a),i__1).Integer__item , write ))
[binder] (\forall* int i__2;0 <= i__2 && i__2 < tcount;Perm( VCTArray.loc(getVCTOption1(b),i__2).Integer__item , write ))
[binder] (\forall* int i__3;0 <= i__3 && i__3 < tcount;Perm( VCTArray.loc(getVCTOption1(c),i__3).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , 1 \ 4 ))
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < tcount && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(b),k_fresh_rw_0).Integer__item , 1 \ 4 ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , 1 \ 4 ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 \ 4 ))
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < tcount;Perm( VCTArray.loc(getVCTOption1(c),i__1).Integer__item , 1 \ 4 ))
[binder] (\forall int i__2;0 <= i__2 && i__2 < tcount;0 < VCTArray.loc(getVCTOption1(c),i__2).Integer__item)
[binder] (\forall* int i__3;0 <= i__3 && i__3 < tcount;Perm( VCTArray.loc(getVCTOption1(a),i__3).Integer__item , write ))
[binder] (\forall* int i__4;0 <= i__4 && i__4 < tcount;Perm( VCTArray.loc(getVCTOption1(b),i__4).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , 1 \ 4 ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(b),tid).Integer__item)
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(c),tid).Integer__item)
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , 1 \ 4 ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , 1 \ 4 ))
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < tcount && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(b),k_fresh_rw_0).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(b),tid).Integer__item)
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(c),tid).Integer__item)
[binder] (\forall int tid;0 <= tid && tid < tcount && 0 < tid;0 < VCTArray.loc(getVCTOption1(b),tid - 1).Integer__item)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(c),tid).Integer__item)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(c),tid).Integer__item)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(a),tid).Integer__item)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(b),tid).Integer__item)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < tcount;0 < VCTArray.loc(getVCTOption1(c),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < tcount;0 < VCTArray.loc(getVCTOption1(c),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < tcount;0 < VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < tcount;0 < VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i__1;0 <= i__1 && i__1 < tcount;Perm( VCTArray.loc(getVCTOption1(c),i__1).Integer__item , 1 \ 4 ))
[binder] (\forall int i__2;0 <= i__2 && i__2 < tcount;0 < VCTArray.loc(getVCTOption1(c),i__2).Integer__item)
[binder] (\forall* int i__3;0 <= i__3 && i__3 < tcount;Perm( VCTArray.loc(getVCTOption1(a),i__3).Integer__item , write ))
[binder] (\forall* int i__4;0 <= i__4 && i__4 < tcount;Perm( VCTArray.loc(getVCTOption1(b),i__4).Integer__item , write ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(b),tid).Integer__item)
[binder] (\forall int tid;0 <= tid && tid < tcount;0 <= tid && tid < tcount)
[binder] (\forall* int k_fresh_rw_0;0 <= k_fresh_rw_0 + 1 && k_fresh_rw_0 + 1 < tcount && 0 < k_fresh_rw_0 + 1;Perm( VCTArray.loc(getVCTOption1(b),k_fresh_rw_0).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount && 0 < tid;0 < VCTArray.loc(getVCTOption1(b),tid - 1).Integer__item)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(c),tid).Integer__item)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , write ))
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(c),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(c),tid).Integer__item)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(a),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(a),tid).Integer__item)
[binder] (\forall* int tid;0 <= tid && tid < tcount;Perm( VCTArray.loc(getVCTOption1(b),tid).Integer__item , 1 \ 4 ))
[binder] (\forall int tid;0 <= tid && tid < tcount;0 < VCTArray.loc(getVCTOption1(b),tid).Integer__item)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < tcount;0 < VCTArray.loc(getVCTOption1(c),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , write ))
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(c),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < tcount;0 < VCTArray.loc(getVCTOption1(c),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < tcount;0 < VCTArray.loc(getVCTOption1(a),i).Integer__item)
[binder] (\forall* int i;0 <= i && i < tcount;Perm( VCTArray.loc(getVCTOption1(b),i).Integer__item , 1 \ 4 ))
[binder] (\forall int i;0 <= i && i < tcount;0 < VCTArray.loc(getVCTOption1(b),i).Integer__item)
[binder] (\forall frac<> a,frac<> b{frac<>.frac_val(a),frac<>.frac_val(b)};true;(frac<>.frac_val(a) == frac<>.frac_val(b)) == (a == b))
[binder] (\forall frac<> a;true;0 \ 1 < frac<>.frac_val(a) && frac<>.frac_val(a) <= 1 \ 1)
[binder] (\forall zfrac<> a,zfrac<> b{zfrac<>.zfrac_val(a),zfrac<>.zfrac_val(b)};true;(zfrac<>.zfrac_val(a) == zfrac<>.zfrac_val(b)) == (a == b))
[binder] (\forall zfrac<> a;true;0 \ 1 <= zfrac<>.zfrac_val(a) && zfrac<>.zfrac_val(a) <= 1 \ 1)
[binder] (\forall VCTArray a,int i{VCTArray.loc(a,i)};true;VCTArray.first(VCTArray.loc(a,i)) == a && VCTArray.second(VCTArray.loc(a,i)) == i)
[binder] (\forall VCTArray a{VCTArray.alen(a)};true;VCTArray.alen(a) >= 0)
[binder] (\forall T x;true;VCTOption.VCTNone() != VCTOption.VCTSome(x))
[binder] (\forall T x;true;VCTOption.getVCTOption(VCTOption.VCTSome(x)) == x)
[binder] (\forall VCTOption x;true;VCTOption.VCTSome(VCTOption.getVCTOption(x)) == x)
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i_fresh_rw_0).Integer__item , read ))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0).Integer__item , read ))
[binder] (\forall int j;0 <= j && j < len;VCTArray.loc(getVCTOption1(pat),j).Integer__item == VCTArray.loc(getVCTOption1(a),j).Integer__item)
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i_fresh_rw_0).Integer__item , read ))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0).Integer__item , read ))
[binder] (\forall int j;0 <= j && j < splitPoint;VCTArray.loc(getVCTOption1(pat),j).Integer__item == VCTArray.loc(getVCTOption1(a),j).Integer__item)
[binder] (\forall int j;splitPoint + 1 <= j && j < len;VCTArray.loc(getVCTOption1(pat),j).Integer__item == VCTArray.loc(getVCTOption1(a),j - 1).Integer__item)
[binder] (\forall* int i_fresh_rw_0__1;0 <= i_fresh_rw_0__1 && i_fresh_rw_0__1 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i_fresh_rw_0__1).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall* int i_fresh_rw_0__2;0 <= i_fresh_rw_0__2 && i_fresh_rw_0__2 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0__2).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i_fresh_rw_0).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall* int i_fresh_rw_0__10;0 <= i_fresh_rw_0__10 && i_fresh_rw_0__10 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i_fresh_rw_0__10).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall* int i_fresh_rw_0__11;0 <= i_fresh_rw_0__11 && i_fresh_rw_0__11 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0__11).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall int j__12;0 <= j__12 && j__12 < i__5;VCTArray.loc(getVCTOption1(pat),j__12).Integer__item == VCTArray.loc(getVCTOption1(a),j__12).Integer__item)
[binder] (\forall int j__13;0 <= j__13 && j__13 < splitPoint__3;VCTArray.loc(getVCTOption1(pat),j__13).Integer__item == VCTArray.loc(getVCTOption1(a),j__13).Integer__item)
[binder] (\forall int j__14;splitPoint__3 + 1 <= j__14 && j__14 < i__5;VCTArray.loc(getVCTOption1(pat),j__14).Integer__item == VCTArray.loc(getVCTOption1(a),j__14 - 1).Integer__item)
[binder] (\forall* int i_fresh_rw_0__15;0 <= i_fresh_rw_0__15 && i_fresh_rw_0__15 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i_fresh_rw_0__15).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall* int i_fresh_rw_0__16;0 <= i_fresh_rw_0__16 && i_fresh_rw_0__16 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0__16).Integer__item , frac<>.frac_val(p) ))
[binder] (\exists int splitPoint__17;0 <= splitPoint__17 && splitPoint__17 < VCTArray.alen(getVCTOption1(pat));method_Relaxed_relaxed__Option<Array<Cell<Integer>>>__Option<Array<Cell<Integer>>>__Integer__Integer(diz,globals,pat,a,VCTArray.alen(getVCTOption1(pat)),splitPoint__17))
[binder] (\forall* int i_fresh_rw_0__18;0 <= i_fresh_rw_0__18 && i_fresh_rw_0__18 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i_fresh_rw_0__18).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall* int i_fresh_rw_0__19;0 <= i_fresh_rw_0__19 && i_fresh_rw_0__19 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0__19).Integer__item , frac<>.frac_val(p) ))
[binder] (\exists int splitPoint__20;0 <= splitPoint__20 && splitPoint__20 < VCTArray.alen(getVCTOption1(pat));method_Relaxed_relaxed__Option<Array<Cell<Integer>>>__Option<Array<Cell<Integer>>>__Integer__Integer(diz,globals,pat,a,VCTArray.alen(getVCTOption1(pat)),splitPoint__20))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i_fresh_rw_0).Integer__item , frac<>.frac_val(p) ))
[binder] (\forall* int i_fresh_rw_0;0 <= i_fresh_rw_0 && i_fresh_rw_0 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i_fresh_rw_0).Integer__item , frac<>.frac_val(p) ))
[binder] (\exists int splitPoint;0 <= splitPoint && splitPoint < VCTArray.alen(getVCTOption1(pat));method_Relaxed_relaxed__Option<Array<Cell<Integer>>>__Option<Array<Cell<Integer>>>__Integer__Integer(diz,globals,pat,a,VCTArray.alen(getVCTOption1(pat)),splitPoint))
[binder] (\forall* int i__22;0 <= i__22 && i__22 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i__22).Integer__item , read ))
[binder] (\forall* int i__23;0 <= i__23 && i__23 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i__23).Integer__item , read ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i).Integer__item , read ))
[binder] (\forall* int i;0 <= i && i < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i).Integer__item , read ))
[binder] (\forall* int i__31;0 <= i__31 && i__31 < VCTArray.alen(getVCTOption1(pat));Perm( VCTArray.loc(getVCTOption1(pat),i__31).Integer__item , read ))
[binder] (\forall* int i__32;0 <= i__32 && i__32 < VCTArray.alen(getVCTOption1(a));Perm( VCTArray.loc(getVCTOption1(a),i__32).Integer__item , read ))
[binder] (\forall int j__33;0 <= j__33 && j__33 < i__26;VCTArray.loc(getVCTOption1(pat),j__33).Integer__item == VCTArray.loc(getVCTOption1(a),j__33).Integer__item)
[binder] (\forall int j__34;0 <= j__34 && j__34 < pivot;VCTArray.loc(getVCTOption1(pat),j__34).Integer__item == VCTArray.loc(getVCTOption1(a),j__34).Integer__item)
[binder] (\forall int j__35;pivot + 1 <= j__35 && j__35 < i__26;VCTArray.loc(getVCTOption1(pat),j__35).Integer__item == VCTArray.loc(getVCTOption1(a),j__35 - 1).Integer__item)
[binder] (\forall int i__36;0 <= i__36 && i__36 < pivot;VCTArray.loc(getVCTOption1(pat),i__36).Integer__item == VCTArray.loc(getVCTOption1(a),i__36).Integer__item)
[binder] (\forall int i__37;pivot + 1 <= i__37 && i__37 < pivot2;VCTArray.loc(getVCTOption1(pat),i__37).Integer__item == VCTArray.loc(getVCTOption1(a),i__37 - 1).Integer__item)
