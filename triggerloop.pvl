pure int magic(int i);

void m() {
  // Our definition of `magic`, with a matching loop
  // Note: added + 2 here because the inline trigger is thrown away?
  // assume (\forall int i; true; magic({: magic(i) :} + 2) == magic(2 * i) + i);
  assume (\forall int i; true; magic({: magic(i) :}) == magic(2 * i) + i);

  // The following should fail, because our definition says nothing
  // about this equality. However, if you uncomment the assertion
  // the verification will time out and give no answer because of the
  // matching loop caused by instantiating the quantifier.
  assert magic(magic(10)) == magic(87987978) + 10;
}
